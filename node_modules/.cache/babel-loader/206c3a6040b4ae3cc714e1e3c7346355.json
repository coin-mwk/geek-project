{"ast":null,"code":"import { __rest } from \"tslib\";\nimport React, { forwardRef, useMemo } from 'react';\nimport classNames from 'classnames';\nimport List from '../list';\nimport RcForm from 'rc-field-form';\nimport { defaultFormContext, FormContext } from './context';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Header } from './header';\nimport { useConfig } from '../config-provider';\nimport merge from 'lodash/merge';\nimport { FormArray } from './form-array';\nimport { traverseReactNode } from '../../utils/traverse-react-node';\nconst classPrefix = 'adm-form';\nconst defaultProps = defaultFormContext;\nexport const Form = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n\n  const {\n    className,\n    style,\n    hasFeedback,\n    children,\n    layout,\n    footer,\n    mode,\n    disabled,\n    requiredMarkStyle\n  } = props,\n        formProps = __rest(props, [\"className\", \"style\", \"hasFeedback\", \"children\", \"layout\", \"footer\", \"mode\", \"disabled\", \"requiredMarkStyle\"]);\n\n  const {\n    locale\n  } = useConfig();\n  const validateMessages = useMemo(() => merge({}, locale.Form.defaultValidateMessages, formProps.validateMessages), [locale.Form.defaultValidateMessages, formProps.validateMessages]);\n  const lists = [];\n  let currentHeader = null;\n  let items = [];\n  let count = 0;\n\n  function collect() {\n    if (items.length === 0) return;\n    count += 1;\n    lists.push(React.createElement(List, {\n      header: currentHeader,\n      key: count,\n      mode: mode\n    }, items));\n    items = [];\n  }\n\n  traverseReactNode(props.children, child => {\n    if (React.isValidElement(child)) {\n      if (child.type === Header) {\n        collect();\n        currentHeader = child.props.children;\n        return;\n      }\n\n      if (child.type === FormArray) {\n        collect();\n        lists.push(child);\n        return;\n      }\n    }\n\n    items.push(child);\n  });\n  collect();\n  return React.createElement(RcForm, Object.assign({\n    className: classNames(classPrefix, className),\n    style: style,\n    ref: ref\n  }, formProps, {\n    validateMessages: validateMessages\n  }), React.createElement(FormContext.Provider, {\n    value: {\n      name: formProps.name,\n      hasFeedback,\n      layout,\n      requiredMarkStyle,\n      disabled: disabled\n    }\n  }, lists), footer && React.createElement(\"div\", {\n    className: `${classPrefix}-footer`\n  }, footer));\n});","map":{"version":3,"names":["__rest","React","forwardRef","useMemo","classNames","List","RcForm","defaultFormContext","FormContext","mergeProps","Header","useConfig","merge","FormArray","traverseReactNode","classPrefix","defaultProps","Form","p","ref","props","className","style","hasFeedback","children","layout","footer","mode","disabled","requiredMarkStyle","formProps","locale","validateMessages","defaultValidateMessages","lists","currentHeader","items","count","collect","length","push","createElement","header","key","child","isValidElement","type","Object","assign","Provider","value","name"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/node_modules/antd-mobile/es/components/form/form.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport React, { forwardRef, useMemo } from 'react';\nimport classNames from 'classnames';\nimport List from '../list';\nimport RcForm from 'rc-field-form';\nimport { defaultFormContext, FormContext } from './context';\nimport { mergeProps } from '../../utils/with-default-props';\nimport { Header } from './header';\nimport { useConfig } from '../config-provider';\nimport merge from 'lodash/merge';\nimport { FormArray } from './form-array';\nimport { traverseReactNode } from '../../utils/traverse-react-node';\nconst classPrefix = 'adm-form';\nconst defaultProps = defaultFormContext;\nexport const Form = forwardRef((p, ref) => {\n  const props = mergeProps(defaultProps, p);\n  const {\n      className,\n      style,\n      hasFeedback,\n      children,\n      layout,\n      footer,\n      mode,\n      disabled,\n      requiredMarkStyle\n    } = props,\n    formProps = __rest(props, [\"className\", \"style\", \"hasFeedback\", \"children\", \"layout\", \"footer\", \"mode\", \"disabled\", \"requiredMarkStyle\"]);\n  const {\n    locale\n  } = useConfig();\n  const validateMessages = useMemo(() => merge({}, locale.Form.defaultValidateMessages, formProps.validateMessages), [locale.Form.defaultValidateMessages, formProps.validateMessages]);\n  const lists = [];\n  let currentHeader = null;\n  let items = [];\n  let count = 0;\n  function collect() {\n    if (items.length === 0) return;\n    count += 1;\n    lists.push(React.createElement(List, {\n      header: currentHeader,\n      key: count,\n      mode: mode\n    }, items));\n    items = [];\n  }\n  traverseReactNode(props.children, child => {\n    if (React.isValidElement(child)) {\n      if (child.type === Header) {\n        collect();\n        currentHeader = child.props.children;\n        return;\n      }\n      if (child.type === FormArray) {\n        collect();\n        lists.push(child);\n        return;\n      }\n    }\n    items.push(child);\n  });\n  collect();\n  return React.createElement(RcForm, Object.assign({\n    className: classNames(classPrefix, className),\n    style: style,\n    ref: ref\n  }, formProps, {\n    validateMessages: validateMessages\n  }), React.createElement(FormContext.Provider, {\n    value: {\n      name: formProps.name,\n      hasFeedback,\n      layout,\n      requiredMarkStyle,\n      disabled: disabled\n    }\n  }, lists), footer && React.createElement(\"div\", {\n    className: `${classPrefix}-footer`\n  }, footer));\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export function mergeLocale(base, patch) {\n  function merge(a, b) {\n    if (typeof a !== 'object' || typeof b !== 'object' || Array.isArray(a) || Array.isArray(b)) {\n      return b !== undefined ? b : a;\n    }\n\n    const result = {};\n\n    for (const key in a) {\n      if (a.hasOwnProperty(key)) {\n        result[key] = merge(a[key], b[key]);\n      }\n    }\n\n    return result;\n  }\n\n  return merge(base, patch);\n}","map":{"version":3,"names":["mergeLocale","base","patch","merge","a","b","Array","isArray","undefined","result","key","hasOwnProperty"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/node_modules/antd-mobile/es/utils/merge-locale.js"],"sourcesContent":["export function mergeLocale(base, patch) {\n  function merge(a, b) {\n    if (typeof a !== 'object' || typeof b !== 'object' || Array.isArray(a) || Array.isArray(b)) {\n      return b !== undefined ? b : a;\n    }\n\n    const result = {};\n\n    for (const key in a) {\n      if (a.hasOwnProperty(key)) {\n        result[key] = merge(a[key], b[key]);\n      }\n    }\n\n    return result;\n  }\n\n  return merge(base, patch);\n}"],"mappings":"AAAA,OAAO,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,KAA3B,EAAkC;EACvC,SAASC,KAAT,CAAeC,CAAf,EAAkBC,CAAlB,EAAqB;IACnB,IAAI,OAAOD,CAAP,KAAa,QAAb,IAAyB,OAAOC,CAAP,KAAa,QAAtC,IAAkDC,KAAK,CAACC,OAAN,CAAcH,CAAd,CAAlD,IAAsEE,KAAK,CAACC,OAAN,CAAcF,CAAd,CAA1E,EAA4F;MAC1F,OAAOA,CAAC,KAAKG,SAAN,GAAkBH,CAAlB,GAAsBD,CAA7B;IACD;;IAED,MAAMK,MAAM,GAAG,EAAf;;IAEA,KAAK,MAAMC,GAAX,IAAkBN,CAAlB,EAAqB;MACnB,IAAIA,CAAC,CAACO,cAAF,CAAiBD,GAAjB,CAAJ,EAA2B;QACzBD,MAAM,CAACC,GAAD,CAAN,GAAcP,KAAK,CAACC,CAAC,CAACM,GAAD,CAAF,EAASL,CAAC,CAACK,GAAD,CAAV,CAAnB;MACD;IACF;;IAED,OAAOD,MAAP;EACD;;EAED,OAAON,KAAK,CAACF,IAAD,EAAOC,KAAP,CAAZ;AACD"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { useMemo } from 'react';\nimport { withCache } from '../../utils/with-cache';\nexport function generateColumnsExtend(rawColumns, val) {\n  const columns = withCache(() => {\n    const c = typeof rawColumns === 'function' ? rawColumns(val) : rawColumns;\n    return c.map(column => column.map(item => typeof item === 'string' ? {\n      label: item,\n      value: item\n    } : item));\n  });\n  const items = withCache(() => {\n    return val.map((v, index) => {\n      var _a;\n\n      const column = columns()[index];\n      if (!column) return null;\n      return (_a = column.find(item => item.value === v)) !== null && _a !== void 0 ? _a : null;\n    });\n  });\n  const extend = {\n    get columns() {\n      return columns();\n    },\n\n    get items() {\n      return items();\n    }\n\n  };\n  return extend;\n}\nexport function useColumnsExtend(rawColumns, value) {\n  return useMemo(() => generateColumnsExtend(rawColumns, value), [rawColumns, value]);\n}","map":{"version":3,"names":["useMemo","withCache","generateColumnsExtend","rawColumns","val","columns","c","map","column","item","label","value","items","v","index","_a","find","extend","useColumnsExtend"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/node_modules/antd-mobile/es/components/picker-view/columns-extend.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { withCache } from '../../utils/with-cache';\nexport function generateColumnsExtend(rawColumns, val) {\n  const columns = withCache(() => {\n    const c = typeof rawColumns === 'function' ? rawColumns(val) : rawColumns;\n    return c.map(column => column.map(item => typeof item === 'string' ? {\n      label: item,\n      value: item\n    } : item));\n  });\n  const items = withCache(() => {\n    return val.map((v, index) => {\n      var _a;\n      const column = columns()[index];\n      if (!column) return null;\n      return (_a = column.find(item => item.value === v)) !== null && _a !== void 0 ? _a : null;\n    });\n  });\n  const extend = {\n    get columns() {\n      return columns();\n    },\n    get items() {\n      return items();\n    }\n  };\n  return extend;\n}\nexport function useColumnsExtend(rawColumns, value) {\n  return useMemo(() => generateColumnsExtend(rawColumns, value), [rawColumns, value]);\n}"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACA,OAAO,SAASC,qBAAT,CAA+BC,UAA/B,EAA2CC,GAA3C,EAAgD;EACrD,MAAMC,OAAO,GAAGJ,SAAS,CAAC,MAAM;IAC9B,MAAMK,CAAC,GAAG,OAAOH,UAAP,KAAsB,UAAtB,GAAmCA,UAAU,CAACC,GAAD,CAA7C,GAAqDD,UAA/D;IACA,OAAOG,CAAC,CAACC,GAAF,CAAMC,MAAM,IAAIA,MAAM,CAACD,GAAP,CAAWE,IAAI,IAAI,OAAOA,IAAP,KAAgB,QAAhB,GAA2B;MACnEC,KAAK,EAAED,IAD4D;MAEnEE,KAAK,EAAEF;IAF4D,CAA3B,GAGtCA,IAHmB,CAAhB,CAAP;EAID,CANwB,CAAzB;EAOA,MAAMG,KAAK,GAAGX,SAAS,CAAC,MAAM;IAC5B,OAAOG,GAAG,CAACG,GAAJ,CAAQ,CAACM,CAAD,EAAIC,KAAJ,KAAc;MAC3B,IAAIC,EAAJ;;MACA,MAAMP,MAAM,GAAGH,OAAO,GAAGS,KAAH,CAAtB;MACA,IAAI,CAACN,MAAL,EAAa,OAAO,IAAP;MACb,OAAO,CAACO,EAAE,GAAGP,MAAM,CAACQ,IAAP,CAAYP,IAAI,IAAIA,IAAI,CAACE,KAAL,KAAeE,CAAnC,CAAN,MAAiD,IAAjD,IAAyDE,EAAE,KAAK,KAAK,CAArE,GAAyEA,EAAzE,GAA8E,IAArF;IACD,CALM,CAAP;EAMD,CAPsB,CAAvB;EAQA,MAAME,MAAM,GAAG;IACb,IAAIZ,OAAJ,GAAc;MACZ,OAAOA,OAAO,EAAd;IACD,CAHY;;IAIb,IAAIO,KAAJ,GAAY;MACV,OAAOA,KAAK,EAAZ;IACD;;EANY,CAAf;EAQA,OAAOK,MAAP;AACD;AACD,OAAO,SAASC,gBAAT,CAA0Bf,UAA1B,EAAsCQ,KAAtC,EAA6C;EAClD,OAAOX,OAAO,CAAC,MAAME,qBAAqB,CAACC,UAAD,EAAaQ,KAAb,CAA5B,EAAiD,CAACR,UAAD,EAAaQ,KAAb,CAAjD,CAAd;AACD"},"metadata":{},"sourceType":"module"}
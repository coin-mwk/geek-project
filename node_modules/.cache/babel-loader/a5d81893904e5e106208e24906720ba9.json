{"ast":null,"code":"var _jsxFileName = \"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Login/index.jsx\",\n    _s = $RefreshSig$();\n\nimport NavBar from '@/components/NavBar';\nimport Input from '@/components/Input';\nimport styles from './index.module.scss';\nimport { useFormik } from 'formik';\nimport classNames from 'classnames';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { sendValidationCode, login } from '@/store/actions/login';\nimport { Toast } from 'antd-mobile';\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { getTokenInfo } from '@/utils/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [time, setTime] = useState(0);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  cl; // 发送验证码\n\n  const onExtraClick = async () => {\n    // 如果验证码获取时间time>0，则不能点击获取验证码\n    if (time > 0) return;\n\n    if (!/^1[3-9]\\d{9}$/.test(mobile)) {\n      formik.setTouched({\n        mobile: true\n      });\n      return;\n    }\n\n    await dispatch(sendValidationCode(mobile));\n    Toast.show({\n      icon: 'success',\n      content: '获取验证码成功！'\n    }); // 开启定时器，60秒内不能重复获取验证码\n\n    setTime(60);\n    let timeId = setInterval(() => {\n      // setTime(time-1);\n      setTime(time => {\n        if (time === 1) {\n          clearInterval(timeId);\n        }\n\n        return time - 1;\n      });\n    }, 1000);\n  }; // yup校验手机号和验证码\n\n\n  let validationSchema = Yup.object().shape({\n    mobile: Yup.string().required('手机号不能为空!').matches(/^1[3-9]\\d{9}$/, '请输入11位有效手机号!'),\n    code: Yup.string().required('验证码不能为空!').matches(/^\\d{6}$/, '请输入6位有效验证码!')\n  }); //formik原生校验手机号和验证码\n  // const validate = values => {\n  //   const errors = {};\n  //   if (!values.mobile) {\n  //     errors.mobile = '手机号不能为空!';\n  //   } else if (values.mobile.length != 11) {\n  //     errors.mobile = '手机号必须为11位!';\n  //   }\n  //   if (!values.code) {\n  //     errors.code = '验证码不能为空!';\n  //   } else if (values.code.length != 6) {\n  //     errors.code = '请输入6位有效验证码!';\n  //   }\n  //   return errors;\n  // };\n\n  const formik = useFormik({\n    initialValues: {\n      mobile: '13323551400',\n      code: '246810'\n    },\n    // 表单提交\n    onSubmit: async values => {\n      await dispatch(login(values));\n      Toast.show({\n        icon: 'success',\n        content: '登录成功!'\n      }); // console.log(getTokenInfo());\n\n      navigate('/home', {\n        replace: true\n      });\n    },\n    validationSchema\n  }); // 解构formik属性方法\n\n  const {\n    values: {\n      mobile,\n      code\n    },\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    touched,\n    isValid\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      children: \"\\u767B\\u5F55\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u77ED\\u4FE1\\u767B\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-item\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u624B\\u673A\\u53F7\",\n            autoComplete: \"off\",\n            value: mobile,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            name: \"mobile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), formik.touched.mobile && formik.errors.mobile ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"validate\",\n            children: formik.errors.mobile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 62\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-item\",\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"\\u8BF7\\u8F93\\u5165\\u9A8C\\u8BC1\\u7801\",\n            autoComplete: \"off\",\n            extra: time == 0 ? '发送验证码' : `${time}秒后获取`,\n            onExtraClick: onExtraClick,\n            value: code,\n            onChange: handleChange,\n            onBlur: handleBlur,\n            name: \"code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), formik.touched.code && formik.errors.code ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"validate\",\n            children: formik.errors.code\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 58\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classNames('login-btn', !isValid ? 'disabled' : null),\n          children: \"\\u767B\\u5F55\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"1qY4vqKk3xecSCh2k3Iz7RdQAKU=\", false, function () {\n  return [useDispatch, useNavigate, useLocation, useFormik];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["NavBar","Input","styles","useFormik","classNames","Yup","useDispatch","sendValidationCode","login","Toast","useState","useLocation","useNavigate","getTokenInfo","Login","time","setTime","dispatch","navigate","location","cl","onExtraClick","test","mobile","formik","setTouched","show","icon","content","timeId","setInterval","clearInterval","validationSchema","object","shape","string","required","matches","code","initialValues","onSubmit","values","replace","handleChange","handleSubmit","handleBlur","touched","isValid","root","errors"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Login/index.jsx"],"sourcesContent":["\nimport NavBar from '@/components/NavBar';\nimport Input from '@/components/Input';\nimport styles from './index.module.scss';\nimport { useFormik } from 'formik';\nimport classNames from 'classnames';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { sendValidationCode, login } from '@/store/actions/login'\nimport { Toast } from 'antd-mobile';\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { getTokenInfo } from '@/utils/storage';\n\nexport default function Login() {\n  const [time, setTime] = useState(0);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  cl\n  // 发送验证码\n  const onExtraClick = async () => {\n    // 如果验证码获取时间time>0，则不能点击获取验证码\n    if (time > 0) return;\n    if (!/^1[3-9]\\d{9}$/.test(mobile)) {\n      formik.setTouched({\n        mobile: true\n      });\n      return\n    }\n    await dispatch(sendValidationCode(mobile));\n    Toast.show({\n      icon: 'success',\n      content: '获取验证码成功！',\n    });\n    // 开启定时器，60秒内不能重复获取验证码\n    setTime(60);\n    let timeId = setInterval(() => {\n      // setTime(time-1);\n      setTime(time => {\n        if (time === 1) {\n          clearInterval(timeId);\n        }\n        return time - 1;\n      });\n    }, 1000);\n  };\n  // yup校验手机号和验证码\n  let validationSchema = Yup.object().shape({\n    mobile: Yup.string().required('手机号不能为空!').matches(/^1[3-9]\\d{9}$/, '请输入11位有效手机号!'),\n    code: Yup.string().required('验证码不能为空!').matches(/^\\d{6}$/, '请输入6位有效验证码!'),\n  });\n  //formik原生校验手机号和验证码\n  // const validate = values => {\n  //   const errors = {};\n  //   if (!values.mobile) {\n  //     errors.mobile = '手机号不能为空!';\n  //   } else if (values.mobile.length != 11) {\n  //     errors.mobile = '手机号必须为11位!';\n  //   }\n\n  //   if (!values.code) {\n  //     errors.code = '验证码不能为空!';\n  //   } else if (values.code.length != 6) {\n  //     errors.code = '请输入6位有效验证码!';\n  //   }\n\n  //   return errors;\n  // };\n  const formik = useFormik({\n    initialValues: {\n      mobile: '13323551400',\n      code: '246810'\n    },\n    // 表单提交\n    onSubmit: async values => {\n      await dispatch(login(values));\n      Toast.show({ icon: 'success', content: '登录成功!' })\n      // console.log(getTokenInfo());\n      navigate('/home', {replace:true});\n    },\n    validationSchema,\n  });\n  // 解构formik属性方法\n  const {\n    values: { mobile, code },\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    touched,\n    isValid\n  } = formik; \n\n  return (\n    <div className={styles.root}>\n      <NavBar>登录</NavBar>\n\n      {/* 内容 */}\n      <div className='content'>\n        <h3>短信登录</h3>\n        <form onSubmit={handleSubmit}>\n          <div className='input-item'>\n            <Input\n              placeholder='请输入手机号'\n              autoComplete='off'\n              value={mobile}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name='mobile'\n            />\n            {formik.touched.mobile && formik.errors.mobile ? <div className='validate'>{formik.errors.mobile}</div> : null}\n          </div>\n          <div className='input-item'>\n            <Input\n              placeholder='请输入验证码'\n              autoComplete='off'\n              extra={time == 0 ? '发送验证码' : `${time}秒后获取`}\n              onExtraClick={onExtraClick}\n              value={code}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name='code'\n            />\n            {formik.touched.code && formik.errors.code ? <div className='validate'>{formik.errors.code}</div> : null}\n          </div>\n          <button type='submit' className={classNames('login-btn', !isValid ? 'disabled' : null)}>登录</button>\n        </form>\n\n      </div>\n    </div>\n  )\n}\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}
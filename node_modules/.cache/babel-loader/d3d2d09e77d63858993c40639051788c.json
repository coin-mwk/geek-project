{"ast":null,"code":"// 对 axios二次封装\nimport { Toast } from \"antd-mobile\";\nimport axios from \"axios\";\nimport { getTokenInfo, hasToken } from \"./storage\";\nconst requests = axios.create({\n  // 配置对象\n  // 基础路劲，发请求的时候，路径当中会出现api，不红你手写\n  baseURL: 'http://geek.itheima.net/v1_0',\n  // 请求超时\n  timeout: 5000\n}); // 请求拦截器：在发送请求前，请求拦截器可以检测到，可以在请求发出去前做一些事情\n\nrequests.interceptors.request.use(config => {\n  // config是一个配置对象，对象里面有一个属性很重要，headers请求头\n  if (hasToken) {\n    const token = getTokenInfo().token;\n    config.headers;\n  }\n\n  return config;\n}, err => {\n  return Promise.reject(err);\n});\nrequests.interceptors.response.use(res => {\n  // 成功的回调函数，服务器响应数据回来以后，响应拦截器可以检测到，可以做一些事情，\n  return res.data;\n}, err => {\n  if (err.response) {\n    Toast.show({\n      content: err.response.data.message\n    });\n  } else {\n    Toast.show({\n      content: '网络繁忙，请稍后再试!'\n    });\n    return Promise.reject(err);\n  }\n});\nexport default requests;","map":{"version":3,"names":["Toast","axios","getTokenInfo","hasToken","requests","create","baseURL","timeout","interceptors","request","use","config","token","headers","err","Promise","reject","response","res","data","show","content","message"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/request.js"],"sourcesContent":["// 对 axios二次封装\nimport { Toast } from \"antd-mobile\";\nimport axios from \"axios\";\nimport { getTokenInfo, hasToken } from \"./storage\";\n\nconst requests = axios.create({\n    // 配置对象\n    // 基础路劲，发请求的时候，路径当中会出现api，不红你手写\n    baseURL: 'http://geek.itheima.net/v1_0',\n    // 请求超时\n    timeout: 5000\n});\n// 请求拦截器：在发送请求前，请求拦截器可以检测到，可以在请求发出去前做一些事情\nrequests.interceptors.request.use(config => {\n    // config是一个配置对象，对象里面有一个属性很重要，headers请求头\n    if(hasToken){\n        const token = getTokenInfo().token;\n        config.headers\n    }\n    return config;\n}, err => {\n    return Promise.reject(err);\n});\n\nrequests.interceptors.response.use(res => {\n    // 成功的回调函数，服务器响应数据回来以后，响应拦截器可以检测到，可以做一些事情，\n    return res.data;\n}, err => {\n    if (err.response) {\n        Toast.show({\n            content: err.response.data.message,\n        });\n    } else {\n        Toast.show({\n            content: '网络繁忙，请稍后再试!',\n        });\n        return Promise.reject(err);\n    }\n});\nexport default requests;\n\n"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,QAAvB,QAAuC,WAAvC;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;EAC1B;EACA;EACAC,OAAO,EAAE,8BAHiB;EAI1B;EACAC,OAAO,EAAE;AALiB,CAAb,CAAjB,C,CAOA;;AACAH,QAAQ,CAACI,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAkCC,MAAM,IAAI;EACxC;EACA,IAAGR,QAAH,EAAY;IACR,MAAMS,KAAK,GAAGV,YAAY,GAAGU,KAA7B;IACAD,MAAM,CAACE,OAAP;EACH;;EACD,OAAOF,MAAP;AACH,CAPD,EAOGG,GAAG,IAAI;EACN,OAAOC,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;AACH,CATD;AAWAV,QAAQ,CAACI,YAAT,CAAsBS,QAAtB,CAA+BP,GAA/B,CAAmCQ,GAAG,IAAI;EACtC;EACA,OAAOA,GAAG,CAACC,IAAX;AACH,CAHD,EAGGL,GAAG,IAAI;EACN,IAAIA,GAAG,CAACG,QAAR,EAAkB;IACdjB,KAAK,CAACoB,IAAN,CAAW;MACPC,OAAO,EAAEP,GAAG,CAACG,QAAJ,CAAaE,IAAb,CAAkBG;IADpB,CAAX;EAGH,CAJD,MAIO;IACHtB,KAAK,CAACoB,IAAN,CAAW;MACPC,OAAO,EAAE;IADF,CAAX;IAGA,OAAON,OAAO,CAACC,MAAR,CAAeF,GAAf,CAAP;EACH;AACJ,CAdD;AAeA,eAAeV,QAAf"},"metadata":{},"sourceType":"module"}
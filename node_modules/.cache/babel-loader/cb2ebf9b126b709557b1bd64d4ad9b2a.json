{"ast":null,"code":"// 用户Token本地缓存键名\nconst TOKEN_KEY = 'geek-itcast';\nconst CHANNEL_KEY = 'geek-itcast-channel';\n/**\n * \n * @returns 从本地读取token信息\n */\n\nexport const getTokenInfo = () => {\n  return JSON.parse(localStorage.getItem(TOKEN_KEY)) || {};\n};\n/**\n * 将token信息存入本地\n * @param {*} tokeninfo \n */\n\nexport const setTokenInfo = tokeninfo => {\n  localStorage.setItem(TOKEN_KEY, JSON.stringify(tokeninfo));\n};\n/**\n * 删除本地缓存的token信息\n */\n\nexport const removeTokenInfo = () => {\n  localStorage.removeItem(TOKEN_KEY);\n};\n/**\n * \n * @returns 判断本地是否有token信息\n */\n\nexport const hasToken = () => {\n  return !!getTokenInfo().token;\n};\n/**\n * 保存频道数据到本地\n * @param {*} channels\n */\n\nexport const setLocalChannels = channels => {\n  localStorage.setItem(CHANNEL_KEY, JSON.stringify(channels));\n};\n/**\n * 获取本地的频道数据，，，，，，，如果没有数据，不要默认为空数组\n * @returns\n */\n\nexport const getLocalChannels = () => {\n  return JSON.parse(localStorage.getItem(CHANNEL_KEY));\n};\n/**\n * 删除本地的频道数据\n */\n\nexport const removeLocalChannels = () => {\n  localStorage.removeItem(CHANNEL_KEY);\n};","map":{"version":3,"names":["TOKEN_KEY","CHANNEL_KEY","getTokenInfo","JSON","parse","localStorage","getItem","setTokenInfo","tokeninfo","setItem","stringify","removeTokenInfo","removeItem","hasToken","token","setLocalChannels","channels","getLocalChannels","removeLocalChannels"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/storage.js"],"sourcesContent":["// 用户Token本地缓存键名\nconst TOKEN_KEY = 'geek-itcast';\nconst CHANNEL_KEY = 'geek-itcast-channel';\n\n/**\n * \n * @returns 从本地读取token信息\n */\nexport const getTokenInfo = ()=>{\n    return JSON.parse(localStorage.getItem(TOKEN_KEY))||{}\n}\n/**\n * 将token信息存入本地\n * @param {*} tokeninfo \n */\nexport const setTokenInfo = (tokeninfo)=>{\n    localStorage.setItem(TOKEN_KEY, JSON.stringify(tokeninfo));\n}\n/**\n * 删除本地缓存的token信息\n */\nexport const removeTokenInfo = ()=>{\n    localStorage.removeItem(TOKEN_KEY);\n}\n/**\n * \n * @returns 判断本地是否有token信息\n */\nexport const hasToken = ()=>{\n    return !!getTokenInfo().token;\n}\n\n\n\n/**\n * 保存频道数据到本地\n * @param {*} channels\n */\n export const setLocalChannels = (channels) => {\n    localStorage.setItem(CHANNEL_KEY, JSON.stringify(channels))\n  }\n  \n  /**\n   * 获取本地的频道数据，，，，，，，如果没有数据，不要默认为空数组\n   * @returns\n   */\n  export const getLocalChannels = () => {\n    return JSON.parse(localStorage.getItem(CHANNEL_KEY))\n  }\n  \n  /**\n   * 删除本地的频道数据\n   */\n  export const removeLocalChannels = () => {\n    localStorage.removeItem(CHANNEL_KEY)\n  }"],"mappings":"AAAA;AACA,MAAMA,SAAS,GAAG,aAAlB;AACA,MAAMC,WAAW,GAAG,qBAApB;AAEA;AACA;AACA;AACA;;AACA,OAAO,MAAMC,YAAY,GAAG,MAAI;EAC5B,OAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBN,SAArB,CAAX,KAA6C,EAApD;AACH,CAFM;AAGP;AACA;AACA;AACA;;AACA,OAAO,MAAMO,YAAY,GAAIC,SAAD,IAAa;EACrCH,YAAY,CAACI,OAAb,CAAqBT,SAArB,EAAgCG,IAAI,CAACO,SAAL,CAAeF,SAAf,CAAhC;AACH,CAFM;AAGP;AACA;AACA;;AACA,OAAO,MAAMG,eAAe,GAAG,MAAI;EAC/BN,YAAY,CAACO,UAAb,CAAwBZ,SAAxB;AACH,CAFM;AAGP;AACA;AACA;AACA;;AACA,OAAO,MAAMa,QAAQ,GAAG,MAAI;EACxB,OAAO,CAAC,CAACX,YAAY,GAAGY,KAAxB;AACH,CAFM;AAMP;AACA;AACA;AACA;;AACC,OAAO,MAAMC,gBAAgB,GAAIC,QAAD,IAAc;EAC3CX,YAAY,CAACI,OAAb,CAAqBR,WAArB,EAAkCE,IAAI,CAACO,SAAL,CAAeM,QAAf,CAAlC;AACD,CAFK;AAIN;AACF;AACA;AACA;;AACE,OAAO,MAAMC,gBAAgB,GAAG,MAAM;EACpC,OAAOd,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAX,CAAP;AACD,CAFM;AAIP;AACF;AACA;;AACE,OAAO,MAAMiB,mBAAmB,GAAG,MAAM;EACvCb,YAAY,CAACO,UAAb,CAAwBX,WAAxB;AACD,CAFM"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import requests from \"@/utils/request\";\n/**\n * 将用户频道保存到 Redux\n * @param {Array} channels\n * @returns\n */\n\nexport const setUserChannels = channels => {\n  return {\n    type: 'home/channel',\n    payload: channels\n  };\n};\n/**\n * 获取频道\n * @returns thunk\n */\n\nexport const getUserChannels = () => {\n  return async dispatch => {\n    // 1. 判断用户是否登录\n    if (hasToken()) {\n      const res = await request.get('/user/channels');\n      dispatch(saveUserChannels(res.data.channels));\n    } else {\n      // 2. 没有token,从本地获取频道数据\n      const channels = getLocalChannels();\n\n      if (channels) {\n        // 没有token，但本地有channels数据\n        dispatch(saveUserChannels(channels));\n      } else {\n        // 没有token, 且本地没有channels数据\n        const res = await request.get('/user/channels');\n        dispatch(saveUserChannels(res.data.channels)); // 保存到本地\n\n        setLocalChannels(res.data.channels);\n      }\n    }\n  };\n};","map":{"version":3,"names":["requests","setUserChannels","channels","type","payload","getUserChannels","dispatch","hasToken","res","request","get","saveUserChannels","data","getLocalChannels","setLocalChannels"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/actions/home.js"],"sourcesContent":["\nimport requests from \"@/utils/request\"\n\n/**\n * 将用户频道保存到 Redux\n * @param {Array} channels\n * @returns\n */\n export const setUserChannels = (channels) => {\n    return {\n      type: 'home/channel',\n      payload: channels,\n    }\n  }\n  \n  /**\n   * 获取频道\n   * @returns thunk\n   */\n  export const getUserChannels = () => {\n    return async (dispatch) => {\n      // 1. 判断用户是否登录\n      if (hasToken()) {\n        const res = await request.get('/user/channels')\n        dispatch(saveUserChannels(res.data.channels))\n      } else {\n        // 2. 没有token,从本地获取频道数据\n        const channels = getLocalChannels()\n        if (channels) {\n          // 没有token，但本地有channels数据\n          dispatch(saveUserChannels(channels))\n        } else {\n          // 没有token, 且本地没有channels数据\n          const res = await request.get('/user/channels')\n          dispatch(saveUserChannels(res.data.channels))\n          // 保存到本地\n          setLocalChannels(res.data.channels)\n        }\n      }\n    }\n  }"],"mappings":"AACA,OAAOA,QAAP,MAAqB,iBAArB;AAEA;AACA;AACA;AACA;AACA;;AACC,OAAO,MAAMC,eAAe,GAAIC,QAAD,IAAc;EAC1C,OAAO;IACLC,IAAI,EAAE,cADD;IAELC,OAAO,EAAEF;EAFJ,CAAP;AAID,CALK;AAON;AACF;AACA;AACA;;AACE,OAAO,MAAMG,eAAe,GAAG,MAAM;EACnC,OAAO,MAAOC,QAAP,IAAoB;IACzB;IACA,IAAIC,QAAQ,EAAZ,EAAgB;MACd,MAAMC,GAAG,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAlB;MACAJ,QAAQ,CAACK,gBAAgB,CAACH,GAAG,CAACI,IAAJ,CAASV,QAAV,CAAjB,CAAR;IACD,CAHD,MAGO;MACL;MACA,MAAMA,QAAQ,GAAGW,gBAAgB,EAAjC;;MACA,IAAIX,QAAJ,EAAc;QACZ;QACAI,QAAQ,CAACK,gBAAgB,CAACT,QAAD,CAAjB,CAAR;MACD,CAHD,MAGO;QACL;QACA,MAAMM,GAAG,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAY,gBAAZ,CAAlB;QACAJ,QAAQ,CAACK,gBAAgB,CAACH,GAAG,CAACI,IAAJ,CAASV,QAAV,CAAjB,CAAR,CAHK,CAIL;;QACAY,gBAAgB,CAACN,GAAG,CAACI,IAAJ,CAASV,QAAV,CAAhB;MACD;IACF;EACF,CAnBD;AAoBD,CArBM"},"metadata":{},"sourceType":"module"}
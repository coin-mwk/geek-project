{"ast":null,"code":"var _jsxFileName = \"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/ArticleList/index.jsx\",\n    _s = $RefreshSig$();\n\nimport styles from './index.module.scss';\nimport ArticleItem from '../ArticleItem';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getArticleList, getMoreArticleList } from '@/store/actions/home';\nimport { PullToRefresh, InfiniteScroll } from 'antd-mobile';\n/**\n * 文章列表组件\n * @param {String} props.channelId 当前文章列表所对应的频道ID\n * @param {String} props.aid 当前 Tab 栏选中的频道ID,高亮的频道id\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArticleList = _ref => {\n  _s();\n\n  let {\n    channelId,\n    aid\n  } = _ref;\n  const res = useSelector(state => state.home.articles[channelId]);\n  const dispatch = useDispatch();\n\n  const onRefresh = () => {\n    // 下拉刷新，需要重新加载最新的数据\n    se;\n    dispatch(getArticleList(channelId, Date.now()));\n  }; // 列表滚动到底部自动加载更多数据。\n  // 是否有更多的数据\n\n\n  const [hasMore, setHasMore] = useState(true); // 是否正在加载数据\n\n  const [loading, setLoading] = useState(false);\n\n  const loadMore = async () => {\n    // // 如果不是当前频道，不加载数据\n    if (channelId !== aid) return; // loading的处理\n\n    if (loading) return; // 没有时间戳了，没有更多数据的处理\n\n    if (!res.timestamp) {\n      setHasMore(false);\n      return;\n    }\n\n    setLoading(true);\n    await dispatch(getMoreArticleList(channelId, res.timestamp));\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    // 如果redux中 有数据  不用发送请求\n    if (res) return;\n\n    if (channelId === aid) {\n      dispatch(getArticleList(channelId, Date.now()));\n    }\n  }, [channelId, aid, dispatch]);\n  const {\n    list\n  } = res || [];\n  if (!res) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"articles\",\n      children: [/*#__PURE__*/_jsxDEV(PullToRefresh, {\n        onRefresh: onRefresh,\n        children: list.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"article-item\",\n          children: /*#__PURE__*/_jsxDEV(ArticleItem, {\n            article: item\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)\n        }, item.art_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n        loadMore: loadMore,\n        hasMore: hasMore\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ArticleList, \"IALhYDFnfq+6rRu1MGHl+BEvHZg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ArticleList;\nexport default ArticleList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleList\");","map":{"version":3,"names":["styles","ArticleItem","useEffect","useState","useDispatch","useSelector","getArticleList","getMoreArticleList","PullToRefresh","InfiniteScroll","ArticleList","channelId","aid","res","state","home","articles","dispatch","onRefresh","se","Date","now","hasMore","setHasMore","loading","setLoading","loadMore","timestamp","list","root","map","item","art_id"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/ArticleList/index.jsx"],"sourcesContent":["import styles from './index.module.scss';\nimport ArticleItem from '../ArticleItem';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getArticleList,getMoreArticleList } from '@/store/actions/home';\nimport { PullToRefresh, InfiniteScroll } from 'antd-mobile';\n/**\n * 文章列表组件\n * @param {String} props.channelId 当前文章列表所对应的频道ID\n * @param {String} props.aid 当前 Tab 栏选中的频道ID,高亮的频道id\n */\nconst ArticleList = ({ channelId, aid }) => {\n    const res = useSelector((state) => state.home.articles[channelId])\n    const dispatch = useDispatch();\n    const onRefresh = () => {\n        // 下拉刷新，需要重新加载最新的数据\n        se\n        dispatch(getArticleList(channelId, Date.now()))\n    }\n    // 列表滚动到底部自动加载更多数据。\n    // 是否有更多的数据\n    const [hasMore, setHasMore] = useState(true);\n    // 是否正在加载数据\n    const [loading, setLoading] = useState(false)\n    const loadMore = async () => {\n        // // 如果不是当前频道，不加载数据\n        if (channelId !== aid) return;\n        // loading的处理\n        if (loading) return;\n        // 没有时间戳了，没有更多数据的处理\n        if (!res.timestamp) {\n            setHasMore(false)\n            return;\n        }\n\n        setLoading(true)\n        await dispatch(getMoreArticleList(channelId, res.timestamp))\n        setLoading(false)\n    }\n    useEffect(() => {\n        // 如果redux中 有数据  不用发送请求\n        if (res) return;\n        if (channelId === aid) {\n            dispatch(getArticleList(channelId, Date.now()))\n        }\n    }, [channelId, aid, dispatch])\n    const { list } = res || []\n    if (!res) return null  \n\n    return (\n        <div className={styles.root}>\n            <div className=\"articles\">\n                <PullToRefresh\n                    onRefresh={onRefresh}\n                >\n                    {list.map((item) => (\n                        <div className=\"article-item\" key={item.art_id}>\n                            <ArticleItem article={item}></ArticleItem>\n                        </div>\n                    ))}\n                </PullToRefresh>\n                <InfiniteScroll loadMore={loadMore} hasMore={hasMore} />\n            </div>\n        </div>\n    )\n}\n\nexport default ArticleList"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAwBC,kBAAxB,QAAkD,sBAAlD;AACA,SAASC,aAAT,EAAwBC,cAAxB,QAA8C,aAA9C;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,WAAW,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,SAAF;IAAaC;EAAb,CAAuB;EACxC,MAAMC,GAAG,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBL,SAApB,CAAZ,CAAvB;EACA,MAAMM,QAAQ,GAAGb,WAAW,EAA5B;;EACA,MAAMc,SAAS,GAAG,MAAM;IACpB;IACAC,EAAE;IACFF,QAAQ,CAACX,cAAc,CAACK,SAAD,EAAYS,IAAI,CAACC,GAAL,EAAZ,CAAf,CAAR;EACH,CAJD,CAHwC,CAQxC;EACA;;;EACA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,IAAD,CAAtC,CAVwC,CAWxC;;EACA,MAAM,CAACqB,OAAD,EAAUC,UAAV,IAAwBtB,QAAQ,CAAC,KAAD,CAAtC;;EACA,MAAMuB,QAAQ,GAAG,YAAY;IACzB;IACA,IAAIf,SAAS,KAAKC,GAAlB,EAAuB,OAFE,CAGzB;;IACA,IAAIY,OAAJ,EAAa,OAJY,CAKzB;;IACA,IAAI,CAACX,GAAG,CAACc,SAAT,EAAoB;MAChBJ,UAAU,CAAC,KAAD,CAAV;MACA;IACH;;IAEDE,UAAU,CAAC,IAAD,CAAV;IACA,MAAMR,QAAQ,CAACV,kBAAkB,CAACI,SAAD,EAAYE,GAAG,CAACc,SAAhB,CAAnB,CAAd;IACAF,UAAU,CAAC,KAAD,CAAV;EACH,CAdD;;EAeAvB,SAAS,CAAC,MAAM;IACZ;IACA,IAAIW,GAAJ,EAAS;;IACT,IAAIF,SAAS,KAAKC,GAAlB,EAAuB;MACnBK,QAAQ,CAACX,cAAc,CAACK,SAAD,EAAYS,IAAI,CAACC,GAAL,EAAZ,CAAf,CAAR;IACH;EACJ,CANQ,EAMN,CAACV,SAAD,EAAYC,GAAZ,EAAiBK,QAAjB,CANM,CAAT;EAOA,MAAM;IAAEW;EAAF,IAAWf,GAAG,IAAI,EAAxB;EACA,IAAI,CAACA,GAAL,EAAU,OAAO,IAAP;EAEV,oBACI;IAAK,SAAS,EAAEb,MAAM,CAAC6B,IAAvB;IAAA,uBACI;MAAK,SAAS,EAAC,UAAf;MAAA,wBACI,QAAC,aAAD;QACI,SAAS,EAAEX,SADf;QAAA,UAGKU,IAAI,CAACE,GAAL,CAAUC,IAAD,iBACN;UAAK,SAAS,EAAC,cAAf;UAAA,uBACI,QAAC,WAAD;YAAa,OAAO,EAAEA;UAAtB;YAAA;YAAA;YAAA;UAAA;QADJ,GAAmCA,IAAI,CAACC,MAAxC;UAAA;UAAA;UAAA;QAAA,QADH;MAHL;QAAA;QAAA;QAAA;MAAA,QADJ,eAUI,QAAC,cAAD;QAAgB,QAAQ,EAAEN,QAA1B;QAAoC,OAAO,EAAEJ;MAA7C;QAAA;QAAA;QAAA;MAAA,QAVJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBH,CAtDD;;GAAMZ,W;UACUL,W,EACKD,W;;;KAFfM,W;AAwDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}
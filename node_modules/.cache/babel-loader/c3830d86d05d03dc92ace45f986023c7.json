{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* tslint:disable:no-console */\n\nimport React, { Component } from 'react';\nimport { calcRotation, getEventName, now, calcMutliFingerStatus, calcMoveStatus, shouldTriggerSwipe, shouldTriggerDirection, getMovingDirection, getDirectionEventName } from './util';\nimport { PRESS, DIRECTION_ALL, DIRECTION_VERTICAL, DIRECTION_HORIZONTAL } from './config';\n;\n;\nvar directionMap = {\n  all: DIRECTION_ALL,\n  vertical: DIRECTION_VERTICAL,\n  horizontal: DIRECTION_HORIZONTAL\n};\n\nvar Gesture = function (_Component) {\n  _inherits(Gesture, _Component);\n\n  function Gesture(props) {\n    _classCallCheck(this, Gesture);\n\n    var _this = _possibleConstructorReturn(this, (Gesture.__proto__ || Object.getPrototypeOf(Gesture)).call(this, props));\n\n    _this.state = {};\n\n    _this.triggerEvent = function (name) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      var cb = _this.props[name];\n\n      if (typeof cb === 'function') {\n        // always give user gesture object as first params first\n        cb.apply(undefined, [_this.getGestureState()].concat(args));\n      }\n    };\n\n    _this.triggerCombineEvent = function (mainEventName, eventStatus) {\n      for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        args[_key2 - 2] = arguments[_key2];\n      }\n\n      _this.triggerEvent.apply(_this, [mainEventName].concat(args));\n\n      _this.triggerSubEvent.apply(_this, [mainEventName, eventStatus].concat(args));\n    };\n\n    _this.triggerSubEvent = function (mainEventName, eventStatus) {\n      for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        args[_key3 - 2] = arguments[_key3];\n      }\n\n      if (eventStatus) {\n        var subEventName = getEventName(mainEventName, eventStatus);\n\n        _this.triggerEvent.apply(_this, [subEventName].concat(args));\n      }\n    };\n\n    _this.triggerPinchEvent = function (mainEventName, eventStatus) {\n      for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n        args[_key4 - 2] = arguments[_key4];\n      }\n\n      var scale = _this.gesture.scale;\n\n      if (eventStatus === 'move' && typeof scale === 'number') {\n        if (scale > 1) {\n          _this.triggerEvent('onPinchOut');\n        }\n\n        if (scale < 1) {\n          _this.triggerEvent('onPinchIn');\n        }\n      }\n\n      _this.triggerCombineEvent.apply(_this, [mainEventName, eventStatus].concat(args));\n    };\n\n    _this.initPressTimer = function () {\n      _this.cleanPressTimer();\n\n      _this.pressTimer = setTimeout(function () {\n        _this.setGestureState({\n          press: true\n        });\n\n        _this.triggerEvent('onPress');\n      }, PRESS.time);\n    };\n\n    _this.cleanPressTimer = function () {\n      /* tslint:disable:no-unused-expression */\n      _this.pressTimer && clearTimeout(_this.pressTimer);\n    };\n\n    _this.setGestureState = function (params) {\n      if (!_this.gesture) {\n        _this.gesture = {};\n      } // cache the previous touches\n\n\n      if (_this.gesture.touches) {\n        _this.gesture.preTouches = _this.gesture.touches;\n      }\n\n      _this.gesture = _extends({}, _this.gesture, params);\n    };\n\n    _this.getGestureState = function () {\n      if (!_this.gesture) {\n        return _this.gesture;\n      } else {\n        // shallow copy\n        return _extends({}, _this.gesture);\n      }\n    };\n\n    _this.cleanGestureState = function () {\n      delete _this.gesture;\n    };\n\n    _this.getTouches = function (e) {\n      return Array.prototype.slice.call(e.touches).map(function (item) {\n        return {\n          x: item.screenX,\n          y: item.screenY\n        };\n      });\n    };\n\n    _this.triggerUserCb = function (status, e) {\n      var cbName = getEventName('onTouch', status);\n\n      if (cbName in _this.props) {\n        _this.props[cbName](e);\n      }\n    };\n\n    _this._handleTouchStart = function (e) {\n      _this.triggerUserCb('start', e);\n\n      _this.event = e;\n\n      if (e.touches.length > 1) {\n        e.preventDefault();\n      }\n\n      _this.initGestureStatus(e);\n\n      _this.initPressTimer();\n\n      _this.checkIfMultiTouchStart();\n    };\n\n    _this.initGestureStatus = function (e) {\n      _this.cleanGestureState(); // store the gesture start state\n\n\n      var startTouches = _this.getTouches(e);\n\n      var startTime = now();\n      var startMutliFingerStatus = calcMutliFingerStatus(startTouches);\n\n      _this.setGestureState({\n        startTime: startTime,\n        startTouches: startTouches,\n        startMutliFingerStatus: startMutliFingerStatus,\n\n        /* copy for next time touch move cala convenient*/\n        time: startTime,\n        touches: startTouches,\n        mutliFingerStatus: startMutliFingerStatus,\n        srcEvent: _this.event\n      });\n    };\n\n    _this.checkIfMultiTouchStart = function () {\n      var _this$props = _this.props,\n          enablePinch = _this$props.enablePinch,\n          enableRotate = _this$props.enableRotate;\n      var touches = _this.gesture.touches;\n\n      if (touches.length > 1 && (enablePinch || enableRotate)) {\n        if (enablePinch) {\n          var startMutliFingerStatus = calcMutliFingerStatus(touches);\n\n          _this.setGestureState({\n            startMutliFingerStatus: startMutliFingerStatus,\n\n            /* init pinch status */\n            pinch: true,\n            scale: 1\n          });\n\n          _this.triggerCombineEvent('onPinch', 'start');\n        }\n\n        if (enableRotate) {\n          _this.setGestureState({\n            /* init rotate status */\n            rotate: true,\n            rotation: 0\n          });\n\n          _this.triggerCombineEvent('onRotate', 'start');\n        }\n      }\n    };\n\n    _this._handleTouchMove = function (e) {\n      _this.triggerUserCb('move', e);\n\n      _this.event = e;\n\n      if (!_this.gesture) {\n        // sometimes weird happen: touchstart -> touchmove..touchmove.. --> touchend --> touchmove --> touchend\n        // so we need to skip the unnormal event cycle after touchend\n        return;\n      } // not a long press\n\n\n      _this.cleanPressTimer();\n\n      _this.updateGestureStatus(e);\n\n      _this.checkIfSingleTouchMove();\n\n      _this.checkIfMultiTouchMove();\n    };\n\n    _this.checkIfMultiTouchMove = function () {\n      var _this$gesture = _this.gesture,\n          pinch = _this$gesture.pinch,\n          rotate = _this$gesture.rotate,\n          touches = _this$gesture.touches,\n          startMutliFingerStatus = _this$gesture.startMutliFingerStatus,\n          mutliFingerStatus = _this$gesture.mutliFingerStatus;\n\n      if (!pinch && !rotate) {\n        return;\n      }\n\n      if (touches.length < 2) {\n        _this.setGestureState({\n          pinch: false,\n          rotate: false\n        }); // Todo: 2 finger -> 1 finger, wait to test this situation\n\n\n        pinch && _this.triggerCombineEvent('onPinch', 'cancel');\n        rotate && _this.triggerCombineEvent('onRotate', 'cancel');\n        return;\n      }\n\n      if (pinch) {\n        var scale = mutliFingerStatus.z / startMutliFingerStatus.z;\n\n        _this.setGestureState({\n          scale: scale\n        });\n\n        _this.triggerPinchEvent('onPinch', 'move');\n      }\n\n      if (rotate) {\n        var rotation = calcRotation(startMutliFingerStatus, mutliFingerStatus);\n\n        _this.setGestureState({\n          rotation: rotation\n        });\n\n        _this.triggerCombineEvent('onRotate', 'move');\n      }\n    };\n\n    _this.allowGesture = function () {\n      return shouldTriggerDirection(_this.gesture.direction, _this.directionSetting);\n    };\n\n    _this.checkIfSingleTouchMove = function () {\n      var _this$gesture2 = _this.gesture,\n          pan = _this$gesture2.pan,\n          touches = _this$gesture2.touches,\n          moveStatus = _this$gesture2.moveStatus,\n          preTouches = _this$gesture2.preTouches,\n          _this$gesture2$availa = _this$gesture2.availablePan,\n          availablePan = _this$gesture2$availa === undefined ? true : _this$gesture2$availa;\n\n      if (touches.length > 1) {\n        _this.setGestureState({\n          pan: false\n        }); // Todo: 1 finger -> 2 finger, wait to test this situation\n\n\n        pan && _this.triggerCombineEvent('onPan', 'cancel');\n        return;\n      } // add avilablePan condition to fix the case in scrolling, which will cause unavailable pan move.\n\n\n      if (moveStatus && availablePan) {\n        var direction = getMovingDirection(preTouches[0], touches[0]);\n\n        _this.setGestureState({\n          direction: direction\n        });\n\n        var eventName = getDirectionEventName(direction);\n\n        if (!_this.allowGesture()) {\n          // if the first move is unavailable, then judge all of remaining touch movings are also invalid.\n          if (!pan) {\n            _this.setGestureState({\n              availablePan: false\n            });\n          }\n\n          return;\n        }\n\n        if (!pan) {\n          _this.triggerCombineEvent('onPan', 'start');\n\n          _this.setGestureState({\n            pan: true,\n            availablePan: true\n          });\n        } else {\n          _this.triggerCombineEvent('onPan', eventName);\n\n          _this.triggerSubEvent('onPan', 'move');\n        }\n      }\n    };\n\n    _this.checkIfMultiTouchEnd = function (status) {\n      var _this$gesture3 = _this.gesture,\n          pinch = _this$gesture3.pinch,\n          rotate = _this$gesture3.rotate;\n\n      if (pinch) {\n        _this.triggerCombineEvent('onPinch', status);\n      }\n\n      if (rotate) {\n        _this.triggerCombineEvent('onRotate', status);\n      }\n    };\n\n    _this.updateGestureStatus = function (e) {\n      var time = now();\n\n      _this.setGestureState({\n        time: time\n      });\n\n      if (!e.touches || !e.touches.length) {\n        return;\n      }\n\n      var _this$gesture4 = _this.gesture,\n          startTime = _this$gesture4.startTime,\n          startTouches = _this$gesture4.startTouches,\n          pinch = _this$gesture4.pinch,\n          rotate = _this$gesture4.rotate;\n\n      var touches = _this.getTouches(e);\n\n      var moveStatus = calcMoveStatus(startTouches, touches, time - startTime);\n      var mutliFingerStatus = void 0;\n\n      if (pinch || rotate) {\n        mutliFingerStatus = calcMutliFingerStatus(touches);\n      }\n\n      _this.setGestureState({\n        /* update status snapshot */\n        touches: touches,\n        mutliFingerStatus: mutliFingerStatus,\n\n        /* update duration status */\n        moveStatus: moveStatus\n      });\n    };\n\n    _this._handleTouchEnd = function (e) {\n      _this.triggerUserCb('end', e);\n\n      _this.event = e;\n\n      if (!_this.gesture) {\n        return;\n      }\n\n      _this.cleanPressTimer();\n\n      _this.updateGestureStatus(e);\n\n      _this.doSingleTouchEnd('end');\n\n      _this.checkIfMultiTouchEnd('end');\n    };\n\n    _this._handleTouchCancel = function (e) {\n      _this.triggerUserCb('cancel', e);\n\n      _this.event = e; // Todo: wait to test cancel case\n\n      if (!_this.gesture) {\n        return;\n      }\n\n      _this.cleanPressTimer();\n\n      _this.updateGestureStatus(e);\n\n      _this.doSingleTouchEnd('cancel');\n\n      _this.checkIfMultiTouchEnd('cancel');\n    };\n\n    _this.triggerAllowEvent = function (type, status) {\n      if (_this.allowGesture()) {\n        _this.triggerCombineEvent(type, status);\n      } else {\n        _this.triggerSubEvent(type, status);\n      }\n    };\n\n    _this.doSingleTouchEnd = function (status) {\n      var _this$gesture5 = _this.gesture,\n          moveStatus = _this$gesture5.moveStatus,\n          pinch = _this$gesture5.pinch,\n          rotate = _this$gesture5.rotate,\n          press = _this$gesture5.press,\n          pan = _this$gesture5.pan,\n          direction = _this$gesture5.direction;\n\n      if (pinch || rotate) {\n        return;\n      }\n\n      if (moveStatus) {\n        var z = moveStatus.z,\n            velocity = moveStatus.velocity;\n        var swipe = shouldTriggerSwipe(z, velocity);\n\n        _this.setGestureState({\n          swipe: swipe\n        });\n\n        if (pan) {\n          // pan need end, it's a process\n          // sometimes, start with pan left, but end with pan right....\n          _this.triggerAllowEvent('onPan', status);\n        }\n\n        if (swipe) {\n          var directionEvName = getDirectionEventName(direction); // swipe just need a direction, it's a endpoint\n\n          _this.triggerAllowEvent('onSwipe', directionEvName);\n\n          return;\n        }\n      }\n\n      if (press) {\n        _this.triggerEvent('onPressUp');\n\n        return;\n      }\n\n      _this.triggerEvent('onTap');\n    };\n\n    _this.getTouchAction = function () {\n      var _this$props2 = _this.props,\n          enablePinch = _this$props2.enablePinch,\n          enableRotate = _this$props2.enableRotate;\n      var directionSetting = _this.directionSetting;\n\n      if (enablePinch || enableRotate || directionSetting === DIRECTION_ALL) {\n        return 'pan-x pan-y';\n      }\n\n      if (directionSetting === DIRECTION_VERTICAL) {\n        return 'pan-x';\n      }\n\n      if (directionSetting === DIRECTION_HORIZONTAL) {\n        return 'pan-y';\n      }\n\n      return 'auto';\n    };\n\n    _this.directionSetting = directionMap[props.direction];\n    return _this;\n  }\n\n  _createClass(Gesture, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.cleanPressTimer();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      var child = React.Children.only(children);\n      var touchAction = this.getTouchAction();\n      var events = {\n        onTouchStart: this._handleTouchStart,\n        onTouchMove: this._handleTouchMove,\n        onTouchCancel: this._handleTouchCancel,\n        onTouchEnd: this._handleTouchEnd\n      };\n      return React.cloneElement(child, _extends({}, events, {\n        style: _extends({\n          touchAction: touchAction\n        }, child.props.style || {})\n      }));\n    }\n  }]);\n\n  return Gesture;\n}(Component);\n\nexport default Gesture;\nGesture.defaultProps = {\n  enableRotate: false,\n  enablePinch: false,\n  direction: 'all'\n};","map":{"version":3,"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","Component","calcRotation","getEventName","now","calcMutliFingerStatus","calcMoveStatus","shouldTriggerSwipe","shouldTriggerDirection","getMovingDirection","getDirectionEventName","PRESS","DIRECTION_ALL","DIRECTION_VERTICAL","DIRECTION_HORIZONTAL","directionMap","all","vertical","horizontal","Gesture","_Component","props","_this","__proto__","Object","getPrototypeOf","call","state","triggerEvent","name","_len","arguments","length","args","Array","_key","cb","apply","undefined","getGestureState","concat","triggerCombineEvent","mainEventName","eventStatus","_len2","_key2","triggerSubEvent","_len3","_key3","subEventName","triggerPinchEvent","_len4","_key4","scale","gesture","initPressTimer","cleanPressTimer","pressTimer","setTimeout","setGestureState","press","time","clearTimeout","params","touches","preTouches","cleanGestureState","getTouches","e","prototype","slice","map","item","x","screenX","y","screenY","triggerUserCb","status","cbName","_handleTouchStart","event","preventDefault","initGestureStatus","checkIfMultiTouchStart","startTouches","startTime","startMutliFingerStatus","mutliFingerStatus","srcEvent","_this$props","enablePinch","enableRotate","pinch","rotate","rotation","_handleTouchMove","updateGestureStatus","checkIfSingleTouchMove","checkIfMultiTouchMove","_this$gesture","z","allowGesture","direction","directionSetting","_this$gesture2","pan","moveStatus","_this$gesture2$availa","availablePan","eventName","checkIfMultiTouchEnd","_this$gesture3","_this$gesture4","_handleTouchEnd","doSingleTouchEnd","_handleTouchCancel","triggerAllowEvent","type","_this$gesture5","velocity","swipe","directionEvName","getTouchAction","_this$props2","key","value","componentWillUnmount","render","children","child","Children","only","touchAction","events","onTouchStart","onTouchMove","onTouchCancel","onTouchEnd","cloneElement","style","defaultProps"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/node_modules/rc-gesture/es/index.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n/* tslint:disable:no-console */\nimport React, { Component } from 'react';\nimport { calcRotation, getEventName, now, calcMutliFingerStatus, calcMoveStatus, shouldTriggerSwipe, shouldTriggerDirection, getMovingDirection, getDirectionEventName } from './util';\nimport { PRESS, DIRECTION_ALL, DIRECTION_VERTICAL, DIRECTION_HORIZONTAL } from './config';\n;\n;\nvar directionMap = {\n    all: DIRECTION_ALL,\n    vertical: DIRECTION_VERTICAL,\n    horizontal: DIRECTION_HORIZONTAL\n};\n\nvar Gesture = function (_Component) {\n    _inherits(Gesture, _Component);\n\n    function Gesture(props) {\n        _classCallCheck(this, Gesture);\n\n        var _this = _possibleConstructorReturn(this, (Gesture.__proto__ || Object.getPrototypeOf(Gesture)).call(this, props));\n\n        _this.state = {};\n        _this.triggerEvent = function (name) {\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n\n            var cb = _this.props[name];\n            if (typeof cb === 'function') {\n                // always give user gesture object as first params first\n                cb.apply(undefined, [_this.getGestureState()].concat(args));\n            }\n        };\n        _this.triggerCombineEvent = function (mainEventName, eventStatus) {\n            for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n                args[_key2 - 2] = arguments[_key2];\n            }\n\n            _this.triggerEvent.apply(_this, [mainEventName].concat(args));\n            _this.triggerSubEvent.apply(_this, [mainEventName, eventStatus].concat(args));\n        };\n        _this.triggerSubEvent = function (mainEventName, eventStatus) {\n            for (var _len3 = arguments.length, args = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n                args[_key3 - 2] = arguments[_key3];\n            }\n\n            if (eventStatus) {\n                var subEventName = getEventName(mainEventName, eventStatus);\n                _this.triggerEvent.apply(_this, [subEventName].concat(args));\n            }\n        };\n        _this.triggerPinchEvent = function (mainEventName, eventStatus) {\n            for (var _len4 = arguments.length, args = Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n                args[_key4 - 2] = arguments[_key4];\n            }\n\n            var scale = _this.gesture.scale;\n\n            if (eventStatus === 'move' && typeof scale === 'number') {\n                if (scale > 1) {\n                    _this.triggerEvent('onPinchOut');\n                }\n                if (scale < 1) {\n                    _this.triggerEvent('onPinchIn');\n                }\n            }\n            _this.triggerCombineEvent.apply(_this, [mainEventName, eventStatus].concat(args));\n        };\n        _this.initPressTimer = function () {\n            _this.cleanPressTimer();\n            _this.pressTimer = setTimeout(function () {\n                _this.setGestureState({\n                    press: true\n                });\n                _this.triggerEvent('onPress');\n            }, PRESS.time);\n        };\n        _this.cleanPressTimer = function () {\n            /* tslint:disable:no-unused-expression */\n            _this.pressTimer && clearTimeout(_this.pressTimer);\n        };\n        _this.setGestureState = function (params) {\n            if (!_this.gesture) {\n                _this.gesture = {};\n            }\n            // cache the previous touches\n            if (_this.gesture.touches) {\n                _this.gesture.preTouches = _this.gesture.touches;\n            }\n            _this.gesture = _extends({}, _this.gesture, params);\n        };\n        _this.getGestureState = function () {\n            if (!_this.gesture) {\n                return _this.gesture;\n            } else {\n                // shallow copy\n                return _extends({}, _this.gesture);\n            }\n        };\n        _this.cleanGestureState = function () {\n            delete _this.gesture;\n        };\n        _this.getTouches = function (e) {\n            return Array.prototype.slice.call(e.touches).map(function (item) {\n                return {\n                    x: item.screenX,\n                    y: item.screenY\n                };\n            });\n        };\n        _this.triggerUserCb = function (status, e) {\n            var cbName = getEventName('onTouch', status);\n            if (cbName in _this.props) {\n                _this.props[cbName](e);\n            }\n        };\n        _this._handleTouchStart = function (e) {\n            _this.triggerUserCb('start', e);\n            _this.event = e;\n            if (e.touches.length > 1) {\n                e.preventDefault();\n            }\n            _this.initGestureStatus(e);\n            _this.initPressTimer();\n            _this.checkIfMultiTouchStart();\n        };\n        _this.initGestureStatus = function (e) {\n            _this.cleanGestureState();\n            // store the gesture start state\n            var startTouches = _this.getTouches(e);\n            var startTime = now();\n            var startMutliFingerStatus = calcMutliFingerStatus(startTouches);\n            _this.setGestureState({\n                startTime: startTime,\n                startTouches: startTouches,\n                startMutliFingerStatus: startMutliFingerStatus,\n                /* copy for next time touch move cala convenient*/\n                time: startTime,\n                touches: startTouches,\n                mutliFingerStatus: startMutliFingerStatus,\n                srcEvent: _this.event\n            });\n        };\n        _this.checkIfMultiTouchStart = function () {\n            var _this$props = _this.props,\n                enablePinch = _this$props.enablePinch,\n                enableRotate = _this$props.enableRotate;\n            var touches = _this.gesture.touches;\n\n            if (touches.length > 1 && (enablePinch || enableRotate)) {\n                if (enablePinch) {\n                    var startMutliFingerStatus = calcMutliFingerStatus(touches);\n                    _this.setGestureState({\n                        startMutliFingerStatus: startMutliFingerStatus,\n                        /* init pinch status */\n                        pinch: true,\n                        scale: 1\n                    });\n                    _this.triggerCombineEvent('onPinch', 'start');\n                }\n                if (enableRotate) {\n                    _this.setGestureState({\n                        /* init rotate status */\n                        rotate: true,\n                        rotation: 0\n                    });\n                    _this.triggerCombineEvent('onRotate', 'start');\n                }\n            }\n        };\n        _this._handleTouchMove = function (e) {\n            _this.triggerUserCb('move', e);\n            _this.event = e;\n            if (!_this.gesture) {\n                // sometimes weird happen: touchstart -> touchmove..touchmove.. --> touchend --> touchmove --> touchend\n                // so we need to skip the unnormal event cycle after touchend\n                return;\n            }\n            // not a long press\n            _this.cleanPressTimer();\n            _this.updateGestureStatus(e);\n            _this.checkIfSingleTouchMove();\n            _this.checkIfMultiTouchMove();\n        };\n        _this.checkIfMultiTouchMove = function () {\n            var _this$gesture = _this.gesture,\n                pinch = _this$gesture.pinch,\n                rotate = _this$gesture.rotate,\n                touches = _this$gesture.touches,\n                startMutliFingerStatus = _this$gesture.startMutliFingerStatus,\n                mutliFingerStatus = _this$gesture.mutliFingerStatus;\n\n            if (!pinch && !rotate) {\n                return;\n            }\n            if (touches.length < 2) {\n                _this.setGestureState({\n                    pinch: false,\n                    rotate: false\n                });\n                // Todo: 2 finger -> 1 finger, wait to test this situation\n                pinch && _this.triggerCombineEvent('onPinch', 'cancel');\n                rotate && _this.triggerCombineEvent('onRotate', 'cancel');\n                return;\n            }\n            if (pinch) {\n                var scale = mutliFingerStatus.z / startMutliFingerStatus.z;\n                _this.setGestureState({\n                    scale: scale\n                });\n                _this.triggerPinchEvent('onPinch', 'move');\n            }\n            if (rotate) {\n                var rotation = calcRotation(startMutliFingerStatus, mutliFingerStatus);\n                _this.setGestureState({\n                    rotation: rotation\n                });\n                _this.triggerCombineEvent('onRotate', 'move');\n            }\n        };\n        _this.allowGesture = function () {\n            return shouldTriggerDirection(_this.gesture.direction, _this.directionSetting);\n        };\n        _this.checkIfSingleTouchMove = function () {\n            var _this$gesture2 = _this.gesture,\n                pan = _this$gesture2.pan,\n                touches = _this$gesture2.touches,\n                moveStatus = _this$gesture2.moveStatus,\n                preTouches = _this$gesture2.preTouches,\n                _this$gesture2$availa = _this$gesture2.availablePan,\n                availablePan = _this$gesture2$availa === undefined ? true : _this$gesture2$availa;\n\n            if (touches.length > 1) {\n                _this.setGestureState({\n                    pan: false\n                });\n                // Todo: 1 finger -> 2 finger, wait to test this situation\n                pan && _this.triggerCombineEvent('onPan', 'cancel');\n                return;\n            }\n            // add avilablePan condition to fix the case in scrolling, which will cause unavailable pan move.\n            if (moveStatus && availablePan) {\n                var direction = getMovingDirection(preTouches[0], touches[0]);\n                _this.setGestureState({ direction: direction });\n                var eventName = getDirectionEventName(direction);\n                if (!_this.allowGesture()) {\n                    // if the first move is unavailable, then judge all of remaining touch movings are also invalid.\n                    if (!pan) {\n                        _this.setGestureState({ availablePan: false });\n                    }\n                    return;\n                }\n                if (!pan) {\n                    _this.triggerCombineEvent('onPan', 'start');\n                    _this.setGestureState({\n                        pan: true,\n                        availablePan: true\n                    });\n                } else {\n                    _this.triggerCombineEvent('onPan', eventName);\n                    _this.triggerSubEvent('onPan', 'move');\n                }\n            }\n        };\n        _this.checkIfMultiTouchEnd = function (status) {\n            var _this$gesture3 = _this.gesture,\n                pinch = _this$gesture3.pinch,\n                rotate = _this$gesture3.rotate;\n\n            if (pinch) {\n                _this.triggerCombineEvent('onPinch', status);\n            }\n            if (rotate) {\n                _this.triggerCombineEvent('onRotate', status);\n            }\n        };\n        _this.updateGestureStatus = function (e) {\n            var time = now();\n            _this.setGestureState({\n                time: time\n            });\n            if (!e.touches || !e.touches.length) {\n                return;\n            }\n            var _this$gesture4 = _this.gesture,\n                startTime = _this$gesture4.startTime,\n                startTouches = _this$gesture4.startTouches,\n                pinch = _this$gesture4.pinch,\n                rotate = _this$gesture4.rotate;\n\n            var touches = _this.getTouches(e);\n            var moveStatus = calcMoveStatus(startTouches, touches, time - startTime);\n            var mutliFingerStatus = void 0;\n            if (pinch || rotate) {\n                mutliFingerStatus = calcMutliFingerStatus(touches);\n            }\n            _this.setGestureState({\n                /* update status snapshot */\n                touches: touches,\n                mutliFingerStatus: mutliFingerStatus,\n                /* update duration status */\n                moveStatus: moveStatus\n            });\n        };\n        _this._handleTouchEnd = function (e) {\n            _this.triggerUserCb('end', e);\n            _this.event = e;\n            if (!_this.gesture) {\n                return;\n            }\n            _this.cleanPressTimer();\n            _this.updateGestureStatus(e);\n            _this.doSingleTouchEnd('end');\n            _this.checkIfMultiTouchEnd('end');\n        };\n        _this._handleTouchCancel = function (e) {\n            _this.triggerUserCb('cancel', e);\n            _this.event = e;\n            // Todo: wait to test cancel case\n            if (!_this.gesture) {\n                return;\n            }\n            _this.cleanPressTimer();\n            _this.updateGestureStatus(e);\n            _this.doSingleTouchEnd('cancel');\n            _this.checkIfMultiTouchEnd('cancel');\n        };\n        _this.triggerAllowEvent = function (type, status) {\n            if (_this.allowGesture()) {\n                _this.triggerCombineEvent(type, status);\n            } else {\n                _this.triggerSubEvent(type, status);\n            }\n        };\n        _this.doSingleTouchEnd = function (status) {\n            var _this$gesture5 = _this.gesture,\n                moveStatus = _this$gesture5.moveStatus,\n                pinch = _this$gesture5.pinch,\n                rotate = _this$gesture5.rotate,\n                press = _this$gesture5.press,\n                pan = _this$gesture5.pan,\n                direction = _this$gesture5.direction;\n\n            if (pinch || rotate) {\n                return;\n            }\n            if (moveStatus) {\n                var z = moveStatus.z,\n                    velocity = moveStatus.velocity;\n\n                var swipe = shouldTriggerSwipe(z, velocity);\n                _this.setGestureState({\n                    swipe: swipe\n                });\n                if (pan) {\n                    // pan need end, it's a process\n                    // sometimes, start with pan left, but end with pan right....\n                    _this.triggerAllowEvent('onPan', status);\n                }\n                if (swipe) {\n                    var directionEvName = getDirectionEventName(direction);\n                    // swipe just need a direction, it's a endpoint\n                    _this.triggerAllowEvent('onSwipe', directionEvName);\n                    return;\n                }\n            }\n            if (press) {\n                _this.triggerEvent('onPressUp');\n                return;\n            }\n            _this.triggerEvent('onTap');\n        };\n        _this.getTouchAction = function () {\n            var _this$props2 = _this.props,\n                enablePinch = _this$props2.enablePinch,\n                enableRotate = _this$props2.enableRotate;\n            var directionSetting = _this.directionSetting;\n\n            if (enablePinch || enableRotate || directionSetting === DIRECTION_ALL) {\n                return 'pan-x pan-y';\n            }\n            if (directionSetting === DIRECTION_VERTICAL) {\n                return 'pan-x';\n            }\n            if (directionSetting === DIRECTION_HORIZONTAL) {\n                return 'pan-y';\n            }\n            return 'auto';\n        };\n        _this.directionSetting = directionMap[props.direction];\n        return _this;\n    }\n\n    _createClass(Gesture, [{\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            this.cleanPressTimer();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var children = this.props.children;\n\n            var child = React.Children.only(children);\n            var touchAction = this.getTouchAction();\n            var events = {\n                onTouchStart: this._handleTouchStart,\n                onTouchMove: this._handleTouchMove,\n                onTouchCancel: this._handleTouchCancel,\n                onTouchEnd: this._handleTouchEnd\n            };\n            return React.cloneElement(child, _extends({}, events, { style: _extends({ touchAction: touchAction }, child.props.style || {}) }));\n        }\n    }]);\n\n    return Gesture;\n}(Component);\n\nexport default Gesture;\n\nGesture.defaultProps = {\n    enableRotate: false,\n    enablePinch: false,\n    direction: 'all'\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}
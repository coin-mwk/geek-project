{"ast":null,"code":"import React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { useDrag } from '@use-gesture/react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Slide } from './slide';\nimport { convertPx } from '../../utils/convert-px';\nimport { bound } from '../../utils/bound';\nconst classPrefix = `adm-image-viewer`;\nexport const Slides = forwardRef((props, ref) => {\n  const slideWidth = window.innerWidth + convertPx(16);\n  const [{\n    x\n  }, api] = useSpring(() => ({\n    x: props.defaultIndex * slideWidth,\n    config: {\n      tension: 250,\n      clamp: true\n    }\n  }));\n  const count = props.images.length;\n\n  function swipeTo(index) {\n    let immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    var _a;\n\n    const i = bound(index, 0, count - 1);\n    (_a = props.onIndexChange) === null || _a === void 0 ? void 0 : _a.call(props, i);\n    api.start({\n      x: i * slideWidth,\n      immediate\n    });\n  }\n\n  useImperativeHandle(ref, () => ({\n    swipeTo\n  }));\n  const dragLockRef = useRef(false);\n  const bind = useDrag(state => {\n    if (dragLockRef.current) return;\n    const [offsetX] = state.offset;\n\n    if (state.last) {\n      const minIndex = Math.floor(offsetX / slideWidth);\n      const maxIndex = minIndex + 1;\n      const velocityOffset = Math.min(state.velocity[0] * 2000, slideWidth) * state.direction[0];\n      swipeTo(bound(Math.round((offsetX + velocityOffset) / slideWidth), minIndex, maxIndex));\n    } else {\n      api.start({\n        x: offsetX,\n        immediate: true\n      });\n    }\n  }, {\n    transform: _ref => {\n      let [x, y] = _ref;\n      return [-x, y];\n    },\n    from: () => [x.get(), 0],\n    bounds: () => {\n      return {\n        left: 0,\n        right: (count - 1) * slideWidth\n      };\n    },\n    rubberband: true,\n    axis: 'x',\n    pointer: {\n      touch: true\n    }\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: `${classPrefix}-slides`\n  }, bind()), React.createElement(animated.div, {\n    className: `${classPrefix}-indicator`\n  }, x.to(v => {\n    const index = bound(Math.round(v / slideWidth), 0, count - 1);\n    return `${index + 1} / ${count}`;\n  })), React.createElement(animated.div, {\n    className: `${classPrefix}-slides-inner`,\n    style: {\n      x: x.to(x => -x)\n    }\n  }, props.images.map((image, index) => React.createElement(Slide, {\n    key: index,\n    image: image,\n    onTap: props.onTap,\n    maxZoom: props.maxZoom,\n    onZoomChange: zoom => {\n      if (zoom !== 1) {\n        const index = Math.round(x.get() / slideWidth);\n        api.start({\n          x: index * slideWidth\n        });\n      }\n    },\n    dragLockRef: dragLockRef\n  }))));\n});","map":{"version":3,"names":["React","forwardRef","useImperativeHandle","useRef","useDrag","useSpring","animated","Slide","convertPx","bound","classPrefix","Slides","props","ref","slideWidth","window","innerWidth","x","api","defaultIndex","config","tension","clamp","count","images","length","swipeTo","index","immediate","_a","i","onIndexChange","call","start","dragLockRef","bind","state","current","offsetX","offset","last","minIndex","Math","floor","maxIndex","velocityOffset","min","velocity","direction","round","transform","y","from","get","bounds","left","right","rubberband","axis","pointer","touch","createElement","Object","assign","className","div","to","v","style","map","image","key","onTap","maxZoom","onZoomChange","zoom"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/node_modules/antd-mobile/es/components/image-viewer/slides.js"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useRef } from 'react';\nimport { useDrag } from '@use-gesture/react';\nimport { useSpring, animated } from '@react-spring/web';\nimport { Slide } from './slide';\nimport { convertPx } from '../../utils/convert-px';\nimport { bound } from '../../utils/bound';\nconst classPrefix = `adm-image-viewer`;\nexport const Slides = forwardRef((props, ref) => {\n  const slideWidth = window.innerWidth + convertPx(16);\n  const [{\n    x\n  }, api] = useSpring(() => ({\n    x: props.defaultIndex * slideWidth,\n    config: {\n      tension: 250,\n      clamp: true\n    }\n  }));\n  const count = props.images.length;\n  function swipeTo(index, immediate = false) {\n    var _a;\n    const i = bound(index, 0, count - 1);\n    (_a = props.onIndexChange) === null || _a === void 0 ? void 0 : _a.call(props, i);\n    api.start({\n      x: i * slideWidth,\n      immediate\n    });\n  }\n  useImperativeHandle(ref, () => ({\n    swipeTo\n  }));\n  const dragLockRef = useRef(false);\n  const bind = useDrag(state => {\n    if (dragLockRef.current) return;\n    const [offsetX] = state.offset;\n    if (state.last) {\n      const minIndex = Math.floor(offsetX / slideWidth);\n      const maxIndex = minIndex + 1;\n      const velocityOffset = Math.min(state.velocity[0] * 2000, slideWidth) * state.direction[0];\n      swipeTo(bound(Math.round((offsetX + velocityOffset) / slideWidth), minIndex, maxIndex));\n    } else {\n      api.start({\n        x: offsetX,\n        immediate: true\n      });\n    }\n  }, {\n    transform: ([x, y]) => [-x, y],\n    from: () => [x.get(), 0],\n    bounds: () => {\n      return {\n        left: 0,\n        right: (count - 1) * slideWidth\n      };\n    },\n    rubberband: true,\n    axis: 'x',\n    pointer: {\n      touch: true\n    }\n  });\n  return React.createElement(\"div\", Object.assign({\n    className: `${classPrefix}-slides`\n  }, bind()), React.createElement(animated.div, {\n    className: `${classPrefix}-indicator`\n  }, x.to(v => {\n    const index = bound(Math.round(v / slideWidth), 0, count - 1);\n    return `${index + 1} / ${count}`;\n  })), React.createElement(animated.div, {\n    className: `${classPrefix}-slides-inner`,\n    style: {\n      x: x.to(x => -x)\n    }\n  }, props.images.map((image, index) => React.createElement(Slide, {\n    key: index,\n    image: image,\n    onTap: props.onTap,\n    maxZoom: props.maxZoom,\n    onZoomChange: zoom => {\n      if (zoom !== 1) {\n        const index = Math.round(x.get() / slideWidth);\n        api.start({\n          x: index * slideWidth\n        });\n      }\n    },\n    dragLockRef: dragLockRef\n  }))));\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}
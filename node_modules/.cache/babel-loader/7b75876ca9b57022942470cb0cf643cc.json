{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { mergeProps } from '../../utils/with-default-props';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLockFn, useThrottleFn } from 'ahooks';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getScrollParent } from '../../utils/get-scroll-parent';\nimport { useConfig } from '../config-provider';\nimport DotLoading from '../dot-loading';\n\nfunction isWindow(element) {\n  return element === window;\n}\n\nconst classPrefix = `adm-infinite-scroll`;\nconst defaultProps = {\n  threshold: 250,\n  children: (hasMore, failed, retry) => React.createElement(InfiniteScrollContent, {\n    hasMore: hasMore,\n    failed: failed,\n    retry: retry\n  })\n};\nexport const InfiniteScroll = p => {\n  const props = mergeProps(defaultProps, p);\n  const [failed, setFailed] = useState(false);\n  const doLoadMore = useLockFn(isRetry => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n      yield props.loadMore(isRetry);\n    } catch (e) {\n      setFailed(true);\n      throw e;\n    }\n  }));\n  const elementRef = useRef(null); // Prevent duplicated trigger of `check` function\n\n  const [flag, setFlag] = useState({});\n  const nextFlagRef = useRef(flag);\n  const [scrollParent, setScrollParent] = useState();\n  const {\n    run: check\n  } = useThrottleFn(() => __awaiter(void 0, void 0, void 0, function* () {\n    if (nextFlagRef.current !== flag) return;\n    if (!props.hasMore) return;\n    const element = elementRef.current;\n    if (!element) return;\n    if (!element.offsetParent) return;\n    const parent = getScrollParent(element);\n    setScrollParent(parent);\n    if (!parent) return;\n    const rect = element.getBoundingClientRect();\n    const elementTop = rect.top;\n    const current = isWindow(parent) ? window.innerHeight : parent.getBoundingClientRect().bottom;\n\n    if (current >= elementTop - props.threshold) {\n      const nextFlag = {};\n      nextFlagRef.current = nextFlag;\n      yield doLoadMore(false);\n      setFlag(nextFlag);\n    }\n  }), {\n    wait: 100,\n    leading: true,\n    trailing: true\n  }); // Make sure to trigger `loadMore` when content changes\n\n  useEffect(() => {\n    check();\n  });\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n    if (!scrollParent) return;\n\n    function onScroll() {\n      check();\n    }\n\n    scrollParent.addEventListener('scroll', onScroll);\n    return () => {\n      scrollParent.removeEventListener('scroll', onScroll);\n    };\n  }, [scrollParent]);\n\n  function retry() {\n    return __awaiter(this, void 0, void 0, function* () {\n      setFailed(false);\n      yield doLoadMore(true);\n      setFlag(nextFlagRef.current);\n    });\n  }\n\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix,\n    ref: elementRef\n  }, typeof props.children === 'function' ? props.children(props.hasMore, failed, retry) : props.children));\n};\n\nconst InfiniteScrollContent = props => {\n  const {\n    locale\n  } = useConfig();\n\n  if (!props.hasMore) {\n    return React.createElement(\"span\", null, locale.InfiniteScroll.noMore);\n  }\n\n  if (props.failed) {\n    return React.createElement(\"span\", null, React.createElement(\"span\", {\n      className: `${classPrefix}-failed-text`\n    }, locale.InfiniteScroll.failedToLoad), React.createElement(\"a\", {\n      onClick: () => {\n        props.retry();\n      }\n    }, locale.InfiniteScroll.retry));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", null, locale.common.loading), React.createElement(DotLoading, null));\n};","map":{"version":3,"names":["__awaiter","mergeProps","React","useEffect","useRef","useState","useLockFn","useThrottleFn","withNativeProps","getScrollParent","useConfig","DotLoading","isWindow","element","window","classPrefix","defaultProps","threshold","children","hasMore","failed","retry","createElement","InfiniteScrollContent","InfiniteScroll","p","props","setFailed","doLoadMore","isRetry","loadMore","e","elementRef","flag","setFlag","nextFlagRef","scrollParent","setScrollParent","run","check","current","offsetParent","parent","rect","getBoundingClientRect","elementTop","top","innerHeight","bottom","nextFlag","wait","leading","trailing","onScroll","addEventListener","removeEventListener","className","ref","locale","noMore","failedToLoad","onClick","Fragment","common","loading"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/node_modules/antd-mobile/es/components/infinite-scroll/infinite-scroll.js"],"sourcesContent":["import { __awaiter } from \"tslib\";\nimport { mergeProps } from '../../utils/with-default-props';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useLockFn, useThrottleFn } from 'ahooks';\nimport { withNativeProps } from '../../utils/native-props';\nimport { getScrollParent } from '../../utils/get-scroll-parent';\nimport { useConfig } from '../config-provider';\nimport DotLoading from '../dot-loading';\nfunction isWindow(element) {\n  return element === window;\n}\nconst classPrefix = `adm-infinite-scroll`;\nconst defaultProps = {\n  threshold: 250,\n  children: (hasMore, failed, retry) => React.createElement(InfiniteScrollContent, {\n    hasMore: hasMore,\n    failed: failed,\n    retry: retry\n  })\n};\nexport const InfiniteScroll = p => {\n  const props = mergeProps(defaultProps, p);\n  const [failed, setFailed] = useState(false);\n  const doLoadMore = useLockFn(isRetry => __awaiter(void 0, void 0, void 0, function* () {\n    try {\n      yield props.loadMore(isRetry);\n    } catch (e) {\n      setFailed(true);\n      throw e;\n    }\n  }));\n  const elementRef = useRef(null);\n  // Prevent duplicated trigger of `check` function\n  const [flag, setFlag] = useState({});\n  const nextFlagRef = useRef(flag);\n  const [scrollParent, setScrollParent] = useState();\n  const {\n    run: check\n  } = useThrottleFn(() => __awaiter(void 0, void 0, void 0, function* () {\n    if (nextFlagRef.current !== flag) return;\n    if (!props.hasMore) return;\n    const element = elementRef.current;\n    if (!element) return;\n    if (!element.offsetParent) return;\n    const parent = getScrollParent(element);\n    setScrollParent(parent);\n    if (!parent) return;\n    const rect = element.getBoundingClientRect();\n    const elementTop = rect.top;\n    const current = isWindow(parent) ? window.innerHeight : parent.getBoundingClientRect().bottom;\n    if (current >= elementTop - props.threshold) {\n      const nextFlag = {};\n      nextFlagRef.current = nextFlag;\n      yield doLoadMore(false);\n      setFlag(nextFlag);\n    }\n  }), {\n    wait: 100,\n    leading: true,\n    trailing: true\n  });\n  // Make sure to trigger `loadMore` when content changes\n  useEffect(() => {\n    check();\n  });\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n    if (!scrollParent) return;\n    function onScroll() {\n      check();\n    }\n    scrollParent.addEventListener('scroll', onScroll);\n    return () => {\n      scrollParent.removeEventListener('scroll', onScroll);\n    };\n  }, [scrollParent]);\n  function retry() {\n    return __awaiter(this, void 0, void 0, function* () {\n      setFailed(false);\n      yield doLoadMore(true);\n      setFlag(nextFlagRef.current);\n    });\n  }\n  return withNativeProps(props, React.createElement(\"div\", {\n    className: classPrefix,\n    ref: elementRef\n  }, typeof props.children === 'function' ? props.children(props.hasMore, failed, retry) : props.children));\n};\nconst InfiniteScrollContent = props => {\n  const {\n    locale\n  } = useConfig();\n  if (!props.hasMore) {\n    return React.createElement(\"span\", null, locale.InfiniteScroll.noMore);\n  }\n  if (props.failed) {\n    return React.createElement(\"span\", null, React.createElement(\"span\", {\n      className: `${classPrefix}-failed-text`\n    }, locale.InfiniteScroll.failedToLoad), React.createElement(\"a\", {\n      onClick: () => {\n        props.retry();\n      }\n    }, locale.InfiniteScroll.retry));\n  }\n  return React.createElement(React.Fragment, null, React.createElement(\"span\", null, locale.common.loading), React.createElement(DotLoading, null));\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}
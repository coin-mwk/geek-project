{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nexport function getComponentLocale(props, context, componentName, getDefaultLocale) {\n  var locale = {};\n\n  if (context && context.antLocale && context.antLocale[componentName]) {\n    locale = context.antLocale[componentName];\n  } else {\n    var defaultLocale = getDefaultLocale(); // TODO: make default lang of antd be English\n    // https://github.com/ant-design/ant-design/issues/6334\n\n    locale = defaultLocale['default'] || defaultLocale;\n  }\n\n  var result = _extends({}, locale);\n\n  if (props.locale) {\n    result = _extends({}, result, props.locale);\n\n    if (props.locale.lang) {\n      result.lang = _extends({}, locale.lang, props.locale.lang);\n    }\n  }\n\n  return result;\n}\nexport function getLocaleCode(context) {\n  var localeCode = context.antLocale && context.antLocale.locale; // Had use LocaleProvide but didn't set locale\n\n  if (context.antLocale && context.antLocale.exist && !localeCode) {\n    return 'zh-cn';\n  }\n\n  return localeCode;\n}","map":{"version":3,"names":["_extends","getComponentLocale","props","context","componentName","getDefaultLocale","locale","antLocale","defaultLocale","result","lang","getLocaleCode","localeCode","exist"],"sources":["/Users/tonystark/code/VSCodeProject/react/gk-h5/node_modules/antd-mobile-v2/es/_util/getLocale.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nexport function getComponentLocale(props, context, componentName, getDefaultLocale) {\n    var locale = {};\n    if (context && context.antLocale && context.antLocale[componentName]) {\n        locale = context.antLocale[componentName];\n    } else {\n        var defaultLocale = getDefaultLocale();\n        // TODO: make default lang of antd be English\n        // https://github.com/ant-design/ant-design/issues/6334\n        locale = defaultLocale['default'] || defaultLocale;\n    }\n    var result = _extends({}, locale);\n    if (props.locale) {\n        result = _extends({}, result, props.locale);\n        if (props.locale.lang) {\n            result.lang = _extends({}, locale.lang, props.locale.lang);\n        }\n    }\n    return result;\n}\nexport function getLocaleCode(context) {\n    var localeCode = context.antLocale && context.antLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if (context.antLocale && context.antLocale.exist && !localeCode) {\n        return 'zh-cn';\n    }\n    return localeCode;\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,aAA5C,EAA2DC,gBAA3D,EAA6E;EAChF,IAAIC,MAAM,GAAG,EAAb;;EACA,IAAIH,OAAO,IAAIA,OAAO,CAACI,SAAnB,IAAgCJ,OAAO,CAACI,SAAR,CAAkBH,aAAlB,CAApC,EAAsE;IAClEE,MAAM,GAAGH,OAAO,CAACI,SAAR,CAAkBH,aAAlB,CAAT;EACH,CAFD,MAEO;IACH,IAAII,aAAa,GAAGH,gBAAgB,EAApC,CADG,CAEH;IACA;;IACAC,MAAM,GAAGE,aAAa,CAAC,SAAD,CAAb,IAA4BA,aAArC;EACH;;EACD,IAAIC,MAAM,GAAGT,QAAQ,CAAC,EAAD,EAAKM,MAAL,CAArB;;EACA,IAAIJ,KAAK,CAACI,MAAV,EAAkB;IACdG,MAAM,GAAGT,QAAQ,CAAC,EAAD,EAAKS,MAAL,EAAaP,KAAK,CAACI,MAAnB,CAAjB;;IACA,IAAIJ,KAAK,CAACI,MAAN,CAAaI,IAAjB,EAAuB;MACnBD,MAAM,CAACC,IAAP,GAAcV,QAAQ,CAAC,EAAD,EAAKM,MAAM,CAACI,IAAZ,EAAkBR,KAAK,CAACI,MAAN,CAAaI,IAA/B,CAAtB;IACH;EACJ;;EACD,OAAOD,MAAP;AACH;AACD,OAAO,SAASE,aAAT,CAAuBR,OAAvB,EAAgC;EACnC,IAAIS,UAAU,GAAGT,OAAO,CAACI,SAAR,IAAqBJ,OAAO,CAACI,SAAR,CAAkBD,MAAxD,CADmC,CAEnC;;EACA,IAAIH,OAAO,CAACI,SAAR,IAAqBJ,OAAO,CAACI,SAAR,CAAkBM,KAAvC,IAAgD,CAACD,UAArD,EAAiE;IAC7D,OAAO,OAAP;EACH;;EACD,OAAOA,UAAP;AACH"},"metadata":{},"sourceType":"module"}
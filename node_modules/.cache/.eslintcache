[{"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/index.js":"1","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/App.js":"2","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/index.js":"3","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/login/index.jsx":"4","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/reducers/index.js":"5","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/storage.js":"6","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/reducers/login.js":"7","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/actions/login.js":"8","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/NavBar/index.js":"9","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Icon/index.js":"10","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Input/index.jsx":"11","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/request.js":"12","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/withRouter.js":"13","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/home/index.jsx":"14","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Layout/index.jsx":"15","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/index.jsx":"16","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Login/index.jsx":"17","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/index.jsx":"18","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Qa/index.jsx":"19","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/actions/profile.js":"20","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/constant/index.js":"21","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/reducers/profile.js":"22","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Edit/index.jsx":"23","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Edit/components/EditList/index.js":"24","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Textarea/index.jsx":"25","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Edit/components/EditInput/index1.js":"26","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Chat/index.jsx":"27","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/AuthRoute/index.jsx":"28","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/history.js":"29","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/NotFound/index.jsx":"30","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Feedback/index.jsx":"31","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Tabs/index.jsx":"32","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/reducers/home.js":"33","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/actions/home.js":"34","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/Channels/index.jsx":"35","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/ArticleList/index.jsx":"36","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Video/index.jsx":"37","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Image/index.jsx":"38","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/FeedbackActionMenu/index.jsx":"39","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/ArticleItem/index.jsx":"40"},{"size":632,"mtime":1666842388061,"results":"41","hashOfConfig":"42"},{"size":1575,"mtime":1670489894109,"results":"43","hashOfConfig":"42"},{"size":551,"mtime":1665995219548,"results":"44","hashOfConfig":"42"},{"size":4011,"mtime":1665995211421,"results":"45","hashOfConfig":"42"},{"size":225,"mtime":1666836632423,"results":"46","hashOfConfig":"42"},{"size":1225,"mtime":1666840629823,"results":"47","hashOfConfig":"42"},{"size":370,"mtime":1666407157813,"results":"48","hashOfConfig":"42"},{"size":1150,"mtime":1666407353349,"results":"49","hashOfConfig":"42"},{"size":881,"mtime":1666443128417,"results":"50","hashOfConfig":"42"},{"size":415,"mtime":1665494084041,"results":"51","hashOfConfig":"42"},{"size":347,"mtime":1665713411724,"results":"52","hashOfConfig":"42"},{"size":3739,"mtime":1669338530795,"results":"53","hashOfConfig":"42"},{"size":333,"mtime":1665917440814,"results":"54","hashOfConfig":"42"},{"size":246,"mtime":1666013776209,"results":"55","hashOfConfig":"42"},{"size":2393,"mtime":1667112234480,"results":"56","hashOfConfig":"42"},{"size":2162,"mtime":1667125969809,"results":"57","hashOfConfig":"42"},{"size":4152,"mtime":1666699608468,"results":"58","hashOfConfig":"42"},{"size":2913,"mtime":1666078822283,"results":"59","hashOfConfig":"42"},{"size":2992,"mtime":1666832161378,"results":"60","hashOfConfig":"42"},{"size":1102,"mtime":1666406762234,"results":"61","hashOfConfig":"42"},{"size":197,"mtime":1666407089552,"results":"62","hashOfConfig":"42"},{"size":509,"mtime":1666078598784,"results":"63","hashOfConfig":"42"},{"size":7320,"mtime":1666699685332,"results":"64","hashOfConfig":"42"},{"size":437,"mtime":1666231370593,"results":"65","hashOfConfig":"42"},{"size":962,"mtime":1666261433081,"results":"66","hashOfConfig":"42"},{"size":1178,"mtime":1666237091550,"results":"67","hashOfConfig":"42"},{"size":4602,"mtime":1666699675004,"results":"68","hashOfConfig":"42"},{"size":291,"mtime":1666699583773,"results":"69","hashOfConfig":"42"},{"size":140,"mtime":1666742195929,"results":"70","hashOfConfig":"42"},{"size":837,"mtime":1666833165335,"results":"71","hashOfConfig":"42"},{"size":1479,"mtime":1666833855390,"results":"72","hashOfConfig":"42"},{"size":3344,"mtime":1666835682271,"results":"73","hashOfConfig":"42"},{"size":1395,"mtime":1667127568385,"results":"74","hashOfConfig":"42"},{"size":5317,"mtime":1667131406269,"results":"75","hashOfConfig":"42"},{"size":5013,"mtime":1666878908880,"results":"76","hashOfConfig":"42"},{"size":2489,"mtime":1667127725336,"results":"77","hashOfConfig":"42"},{"size":1835,"mtime":1667021760999,"results":"78","hashOfConfig":"42"},{"size":2404,"mtime":1667023046352,"results":"79","hashOfConfig":"42"},{"size":3440,"mtime":1667131644819,"results":"80","hashOfConfig":"42"},{"size":2230,"mtime":1667127692909,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},"jj22cc",{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"85"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"85"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"85"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"85"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"85"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"85"},{"filePath":"170","messages":"171","suppressedMessages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"85"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"85"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"187","messages":"188","suppressedMessages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"85"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/index.js",[],[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/App.js",["212","213","214"],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/index.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/login/index.jsx",["215","216","217"],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/reducers/index.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/storage.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/reducers/login.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/actions/login.js",["218"],[],"// 存放有关login的action\nimport request from '@/utils/request'\nimport { setTokenInfo, removeTokenInfo } from '@/utils/storage';\n\n// 发送短信验证码\nexport const sendValidationCode = mobile=>{\n    return async (dispatch)=>{\n        const res = await request.get(`/sms/codes/${mobile}`);\n    }\n}\n\n/**\n * 登录验证\n * @param {*} data \n * @returns \n */\nexport const login = (data)=>{\n    return async(dispatch)=>{\n        const res = await request({\n            method:'post',\n            url:'/authorizations',\n            data\n        })\n        // 保存token到redux中\n        dispatch(saveToken(res.data))\n        // 保存token到本地\n        setTokenInfo(res.data)\n    }\n}\n/**\n * 保存token\n * @param {*} payload \n * @returns \n */\nexport const saveToken = (payload)=>{\n    return {\n        type:'login/token',\n        payload,\n    }\n}\n\n/**\n * 个人信息中退出登录\n * @returns \n */\n export const logout = ()=>{\n    return dispatch =>{\n        console.log(123123)\n        // 移除本地token\n        removeTokenInfo();\n        // 移除redux中的token\n        dispatch({\n            type:'login/logout'\n        });\n    }\n}","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/NavBar/index.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Icon/index.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Input/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/request.js",["219","220","221","222"],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/withRouter.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/home/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Layout/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/index.jsx",["223","224"],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Login/index.jsx",["225","226","227"],[],"\nimport NavBar from '@/components/NavBar';\nimport Input from '@/components/Input';\nimport styles from './index.module.scss';\nimport { useFormik } from 'formik';\nimport classNames from 'classnames';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { sendValidationCode, login } from '@/store/actions/login'\nimport { Toast } from 'antd-mobile';\nimport { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom'\nimport { getTokenInfo } from '@/utils/storage';\n\nexport default function Login() {\n  const [time, setTime] = useState(0);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const location = useLocation();\n  // 发送验证码\n  const onExtraClick = async () => {\n    // 如果验证码获取时间time>0，则不能点击获取验证码\n    if (time > 0) return;\n    if (!/^1[3-9]\\d{9}$/.test(mobile)) {\n      formik.setTouched({\n        mobile: true\n      });\n      return\n    }\n    await dispatch(sendValidationCode(mobile));\n    Toast.show({\n      icon: 'success',\n      content: '获取验证码成功！',\n    });\n    // 开启定时器，60秒内不能重复获取验证码\n    setTime(60);\n    let timeId = setInterval(() => {\n      // setTime(time-1);\n      setTime(time => {\n        if (time === 1) {\n          clearInterval(timeId);\n        }\n        return time - 1;\n      });\n    }, 1000);\n  };\n  // yup校验手机号和验证码\n  let validationSchema = Yup.object().shape({\n    mobile: Yup.string().required('手机号不能为空!').matches(/^1[3-9]\\d{9}$/, '请输入11位有效手机号!'),\n    code: Yup.string().required('验证码不能为空!').matches(/^\\d{6}$/, '请输入6位有效验证码!'),\n  });\n  //formik原生校验手机号和验证码\n  // const validate = values => {\n  //   const errors = {};\n  //   if (!values.mobile) {\n  //     errors.mobile = '手机号不能为空!';\n  //   } else if (values.mobile.length != 11) {\n  //     errors.mobile = '手机号必须为11位!';\n  //   }\n\n  //   if (!values.code) {\n  //     errors.code = '验证码不能为空!';\n  //   } else if (values.code.length != 6) {\n  //     errors.code = '请输入6位有效验证码!';\n  //   }\n\n  //   return errors;\n  // };\n  const formik = useFormik({\n    initialValues: {\n      mobile: '13323551400',\n      code: '246810'\n    },\n    // 表单提交\n    onSubmit: async values => {\n      await dispatch(login(values));\n      Toast.show({ icon: 'success', content: '登录成功!' })\n      // 跳转至进登录页前的页面，若没有跳转至首页home\n      navigate(location.state?.path?location.state.path:'/home', {replace:true});\n    },\n    validationSchema,\n  });\n  // 解构formik属性方法\n  const {\n    values: { mobile, code },\n    handleChange,\n    handleSubmit,\n    handleBlur,\n    touched,\n    isValid\n  } = formik; \n\n  return (\n    <div className={styles.root}>\n      <NavBar>登录</NavBar>\n\n      {/* 内容 */}\n      <div className='content'>\n        <h3>短信登录</h3>\n        <form onSubmit={handleSubmit}>\n          <div className='input-item'>\n            <Input\n              placeholder='请输入手机号'\n              autoComplete='off'\n              value={mobile}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name='mobile'\n            />\n            {formik.touched.mobile && formik.errors.mobile ? <div className='validate'>{formik.errors.mobile}</div> : null}\n          </div>\n          <div className='input-item'>\n            <Input\n              placeholder='请输入验证码'\n              autoComplete='off'\n              extra={time == 0 ? '发送验证码' : `${time}秒后获取`}\n              onExtraClick={onExtraClick}\n              value={code}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name='code'\n            />\n            {formik.touched.code && formik.errors.code ? <div className='validate'>{formik.errors.code}</div> : null}\n          </div>\n          <button type='submit' className={classNames('login-btn', !isValid ? 'disabled' : null)}>登录</button>\n        </form>\n\n      </div>\n    </div>\n  )\n}\n\n\n","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/index.jsx",["228"],[],"import Icon from '@/components/Icon'\nimport { getUser } from '@/store/actions/profile'\nimport { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useNavigate, Link } from 'react-router-dom'\n// import { Link, useHistory } from 'react-router-dom'\nimport styles from './index.module.scss'\n\nconst Profile = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const user = useSelector(state=> state.profile.user);\n  useEffect(()=>{\n    dispatch(getUser());\n  },[]);\n\n  return (\n    <div className={styles.root}>\n      <div className=\"profile\">\n        {/* 顶部个人信息区域 */}\n        <div className=\"user-info\">\n          <div className=\"avatar\">\n            <img src={user.photo} alt=\"\" />\n          </div>\n          <div className=\"user-name\">{user.name}</div>\n          <Link to=\"/profile/edit\">\n            个人信息 <Icon type=\"icon-right\" />\n          </Link>\n        </div>\n\n        {/* 今日阅读区域 */}\n        <div className=\"read-info\">\n          <Icon type=\"iconbtn_readingtime\" />\n          今日阅读 <span>10</span> 分钟\n        </div>\n\n        {/* 统计信息区域 */}\n        <div className=\"count-list\">\n          <div className=\"count-item\">\n            <p>{user.art_count}</p>\n            <p>动态</p>\n          </div>\n          <div className=\"count-item\">\n            <p>{user.follow_count}</p>\n            <p>关注</p>\n          </div>\n          <div className=\"count-item\">\n            <p>{user.fans_count}</p>\n            <p>粉丝</p>\n          </div>\n          <div className=\"count-item\">\n            <p>{user.like_count}</p>\n            <p>被赞</p>\n          </div>\n        </div>\n\n        {/* 主功能菜单区域 */}\n        <div className=\"user-links\">\n          <div className=\"link-item\">\n            <Icon type=\"icon-xiaoxi\" />\n            <div>消息通知</div>\n          </div>\n          <div className=\"link-item\">\n            <Icon type=\"icon-shoucang\" />\n            <div>收藏</div>\n          </div>\n          <div className=\"link-item\">\n            <Icon type=\"icon-liulanlishi\" />\n            <div>浏览历史</div>\n          </div>\n          <div className=\"link-item\">\n            <Icon type=\"icon-canjiabisaizuopin-\" />\n            <div>我的作品</div>\n          </div>\n        </div>\n      </div>\n\n      {/* 更多服务菜单区域 */}\n      <div className=\"more-service\">\n        <h3>更多服务</h3>\n        <div className=\"service-list\">\n          <div className=\"service-item\" onClick={() => navigate('/profile/feedback')}>\n            <Icon type=\"icon-yijianfankui\" />\n            <div>用户反馈</div>\n          </div>\n          <div className=\"service-item\" onClick={() => navigate('/profile/chat')}>\n            <Icon type=\"icon-kefu\" />\n            <div>小智同学</div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Profile\n","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Qa/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/actions/profile.js",["229"],[],"import requests from \"@/utils/request\"\nimport { removeTokenInfo } from \"@/utils/storage\";\nimport { SAVE_PROFILE, SAVE_USER } from \"../constant\";\n\n/**\n * 请求用户信息user\n * @returns Promise\n */\nexport const getUser = ()=>{\n    return async dispatch=>{\n        const res = await requests.get('/user');\n        dispatch(saveUser(res.data));\n    }\n}\n/**\n * 获取用户个人信息profile\n * @returns Promise\n */\nexport const getProfile= ()=>{\n    return async(dispatch)=>{\n        const res = await requests.get('/user/profile');\n        dispatch(saveProfile(res.data));\n    }\n}\n\n/**\n * 存放用户个人信息\n * @param {*} payload \n * @returns \n */\nexport const saveUser = (payload)=>{\n    return{\n        type:SAVE_USER,\n        payload,\n    }\n}\n/**\n * 存放用户个人信息\n * @param {*} payload \n * @returns \n */\n export const saveProfile = (payload)=>{\n    return{\n        type:SAVE_PROFILE,\n        payload,\n    }\n}\n\n\nexport const updateProfile = (data)=>{\n    return async dispatch =>{\n        const res = await requests.patch('/user/profile', data);\n        console.log(res);\n    }\n}\n\n","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/constant/index.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/reducers/profile.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Edit/index.jsx",["230","231","232","233","234","235","236","237","238","239"],[],"import Navbar from '@/components/NavBar'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { List, Toast, Dialog} from 'antd-mobile'\nimport { Drawer,DatePicker } from 'antd-mobile-v2'\nimport styles from './index.module.scss'\nimport { useNavigate } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProfile, updateProfile } from '@/store/actions/profile'\nimport classNames from 'classnames'\nimport EditInput from './components/EditInput/index1'\nimport EditList from './components/EditList'\nimport dayjs from 'dayjs' \nimport { logout } from '@/store/actions/login'\n\nconst { Item } = List\nexport default function ProfileEdit() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const fileRef = useRef(null);\n\n  // 控制全屏抽屉的显示与隐藏\n  const [open, setOpen] = useState({\n    visible: false,\n    type: ''\n  })\n\n  // 控制列表抽屉的显示与隐藏\n  const [listOpen, setListOpen] = useState({\n    visible: false,\n    type: ''\n  })\n\n  const onClose = () => {\n    setOpen({\n      visible: false,\n      type: ''\n    })\n    // setListOpen({\n    //   visible: false,\n    //   type: ''\n    // })\n  }\n\n//   const onFileChange = async e => {\n//     //  获取文件\n//     const file = e.target.files[0]\n//     // console.log(e)\n//     const fd = new FormData()\n\n//     // 上传文件\n//     fd.append('photo', file)\n//     await dispatch(updatePhoto(fd))\n\n//     Toast.success('图片上传成功')\n//     onClose()\n//   }\n\n//   const onBirthdayChange = e => {\n//     // console.log(e)\n//     onCommit('birthday', dayjs(e).format('YYYY-MM-DD'))\n//   }\n\n//   const config = {\n//     photo: [\n//       {\n//         title: '拍照',\n//         onClick: () => {\n//           console.log('拍照')\n//         }\n//       },\n//       {\n//         title: '本地选择',\n//         onClick: () => {\n//           // console.log('本地选择')\n//           // 触发点击事件\n//           fileRef.current.click()\n//         }\n//       }\n//     ],\n//     gender: [\n//       {\n//         title: '男',\n//         onClick: () => {\n//           // console.log('男')\n//           // dispatch(updateProfile({ gender: 0 }))\n//           onCommit('gender', 0)\n//         }\n//       },\n//       {\n//         title: '女',\n//         onClick: () => {\n//           // console.log('女')\n//           // dispatch(updateProfile({ gender: 1 }))\n//           onCommit('gender', 1)\n//         }\n//       }\n//     ]\n//   }\n\n  const logoutFn = () => {\n    // 1.显示弹窗\n    Dialog.confirm({\n      content: '确定要退出吗？',\n      onConfirm: async () => { \n        dispatch(logout());\n        Toast.show({icon:'success',content:'退出成功!'});\n        // 跳转到登录页\n        navigate('/login', {replace:true});\n      },\n    })\n    // Modal.alert('温馨提示', '确定要退出吗？', [\n    //   { text: '取消' },\n    //   {\n    //     text: '确定',\n    //     style: { color: '#FC6627' },\n    //     onPress: () => {\n    //       // console.log('话好好说')\n    //       dispatch(logout())\n    //       history.push('/login')\n    //       Toast.success('退出登录成功')\n    //     }\n    //   }\n    // ])\n    // 2.删除token（本地和redux）\n    // 3.跳转到登录页\n  }\n  useEffect(() => {\n    // 发送请求，获取数据\n    dispatch(getProfile());\n  }, [dispatch]);\n\n  // 获取redux中的数据\n  const profile = useSelector(state => state.profile.profile);\n\n//   const onCommit = async (type, value) => {\n//     // console.log(type, value)\n//     await dispatch(\n//       updateProfile({\n//         [type]: value\n//       })\n//     )\n//     Toast.success('修改成功', 1, null, false)\n//     onClose()\n//   }\n\n  return (\n    <div className={styles.root}>\n      <div className=\"content\">\n        {/* 顶部导航栏 */}\n        <Navbar onClick={() => navigate(-1)}>个人信息</Navbar>\n\n        {/* 中间内容区域 */}\n        <div className=\"wrapper\">\n          {/* 列表一：显示头像、昵称、简介 */}\n          <List className=\"profile-list\">\n            <Item\n            //   arrow=\"horizontal\"\n              extra={\n                <span className=\"avatar-wrapper\">\n                  <img src={profile.photo} alt=\"\" />\n                </span>\n              }\n              onClick={() => {\n                // setListOpen({\n                //   visible: true,\n                //   type: 'photo'\n                // })\n              }}\n            >\n              头像\n            </Item>\n\n            <Item\n            //   arrow=\"horizontal\"\n              extra={profile.name}\n              onClick={() => {\n                // console.log(111)\n                setOpen({\n                  visible: true,\n                  type: 'name'\n                })\n              }}\n            >\n              昵称\n            </Item>\n\n            <Item\n            //   arrow=\"horizontal\"\n              extra={\n                <span className={classNames('intro', profile.intro ? 'normal' : '')}>{profile.intro || '未填写'}</span>\n              }\n              onClick={() => {\n                setOpen({\n                  visible: true,\n                  type: 'intro'\n                })\n              }}\n            >\n              简介\n            </Item>\n          </List>\n\n          {/* 列表二：显示性别、生日 */}\n          <List className=\"profile-list\">\n            <Item\n            //   arrow=\"horizontal\"\n              extra={profile.gender === 0 ? '男' : '女'}\n              onClick={() => {\n                // setListOpen({\n                //   visible: true,\n                //   type: 'gender'\n                // })\n              }}\n            >\n              性别\n            </Item>\n            <DatePicker\n              mode=\"date\"\n              title=\"选择年月日\"\n              value={new Date(profile.birthday)}\n              minDate={new Date('1950-01-01')}\n              maxDate={new Date()}\n            //   onChange={onBirthdayChange}\n            >\n              <Item \n                // arrow=\"horizontal\" \n                extra={'2020-02-02'}>\n                生日\n              </Item>\n            </DatePicker>\n          </List>\n\n          {/* 文件选择框，用于头像图片的上传 */}\n          {/* <input type=\"file\" hidden /> */}\n        </div>\n\n        {/* 上传图片 */}\n        {/* <input type=\"file\" hidden ref={fileRef} onChange={onFileChange} /> */}\n\n        {/* 底部栏：退出登录按钮 */}\n        <div className=\"logout\">\n          <button className=\"btn\" onClick={logoutFn}>\n            退出登录\n          </button>\n        </div>\n      </div>\n{/* \n      {/* 全屏抽屉组件 */}\n      {/* <Drawer\n        sidebar={open.visible&&<EditInput onClose={onClose} type={open.type} />}\n        // sidebar={''}\n        open={open.visible}\n        className=\"drawer\"\n        position=\"right\"\n      >\n        {''}\n      </Drawer> */}\n\n      {/* 列表抽屉组件 */}\n      {/* 头像、性别 */}\n      {/* <Drawer\n        className=\"drawer-list\"\n        position=\"bottom\"\n        sidebar={listOpen.visible && <EditList config={config} onClose={onClose} type={listOpen.type}></EditList>}\n        open={listOpen.visible}\n        onOpenChange={onClose}\n      >\n        {''}\n      </Drawer> */}\n    </div>\n  )\n}\n","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Edit/components/EditList/index.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Textarea/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Edit/components/EditInput/index1.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Chat/index.jsx",["240","241","242"],[],"import Icon from '@/components/Icon';\nimport Input from '@/components/Input';\nimport NavBar from '@/components/NavBar';\nimport { useEffect, useRef, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport styles from './index.module.scss';\nimport io from 'socket.io-client';\nimport { Toast } from 'antd-mobile';\nimport { getTokenInfo } from '@/utils/storage';\n\nconst Chat = () => {\n    const clientRef = useRef(null);\n    const listRef = useRef(null);\n    const navigate = useNavigate();\n    const [messageList, setMessageList] = useState([\n        { type: 'robot', text: '亲爱的用户您好，小智同学为您服务！' },\n        { type: 'user', text: 'hello！' },\n    ]);\n    const [msg, setMsg] = useState('');\n    const photo = useSelector(state => state.profile.user.photo);\n    useEffect(() => {\n        // 创建客户端实例\n        const client = io('http://toutiao.itheima.net', {\n            transports: ['websocket'],\n            // 在查询字符串参数中传递 token\n            query: {\n                token: getTokenInfo().token\n            }\n        });\n\n        // 监听连接成功的事件\n        client.on('connect', () => {\n            // 向聊天记录中添加一条消息\n            // Toast.show({icon:'success',content:'连接服务器成功，开始聊天吧!'});\n            setMessageList(messageList => [\n                ...messageList,\n                { type: 'robot', text: '我现在恭候着您的提问。' }\n            ]);\n        });\n\n        // 监听收到消息的事件\n        client.on('message', data => {\n            setMessageList(messageList=>{\n                return [\n                ...messageList,\n                {\n                    type:'robot',\n                    text:data.msg\n                }\n            ]})\n        })\n\n        // 将客户端实例缓存到 ref 引用中\n        clientRef.current = client;\n\n        // 在组件销毁时关闭 socket.io 的连接\n        return () => {\n            client.close();\n        }\n    }, []);\n    useEffect(() => {\n        // 当messageList发生变化 就会执行\n        // 让滚动条 滑动到最下面\n        listRef.current.scrollTop = listRef.current.scrollHeight - listRef.current.offsetHeight\n      }, [messageList])\n    const onKeyDown = (e)=>{\n        if(e.keyCode !== 13) return;\n        if(!e.target.value) return;\n        // 回车的时候， 需要给服务器发送消息  把自己的消息添加到消息队列中\n        setMessageList([\n            ...messageList,\n            {\n                type:'user',\n                text:msg\n            }\n        ]);\n        clientRef.current.emit('message',{\n            msg,\n            timestamp:Date.now()\n        })\n        // 清空消息\n        setMsg('');\n    };\n    return (\n        <div className={styles.root}>\n            {/* 顶部导航栏 */}\n            <NavBar className=\"fixed-header\" onLeftClick={() => navigate(-1)}>\n                小智同学\n            </NavBar>\n\n            {/* 聊天记录列表 */}\n            <div className=\"chat-list\" ref={listRef}>\n                {\n                    messageList.map((item, index) => {\n                        if (item.type === 'robot') {\n                            {/* 机器人的消息 */ }\n                            return (\n                                <div className=\"chat-item\" key={index}>\n                                    <Icon type=\"icon-kefu1\" />\n                                    <div className=\"message\">{item.text}</div>\n                                </div>)\n                        } else {\n                            {/* 用户的消息 */ }\n                            return (\n                                <div className=\"chat-item user\" key={index}>\n                                    <img src={photo || 'http://toutiao.itheima.net/images/user_head.jpg'} alt=\"\" />\n                                    <div className=\"message\">{item.text}</div>\n                                </div>)\n                        }\n                    })\n                }\n            </div>\n\n            {/* 底部消息输入框 */}\n            <div className=\"input-footer\">\n                <Input\n                    className=\"no-border\"\n                    placeholder=\"请描述您的问题\"\n                    value={msg}\n                    onChange = {(e)=>setMsg(e.target.value)}\n                    onKeyDown={onKeyDown}\n                />\n                <Icon type=\"iconbianji\" />\n            </div>\n        </div>\n    )\n}\n\nexport default Chat","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/AuthRoute/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/utils/history.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/NotFound/index.jsx",["243","244"],[],"import React from 'react'\nimport { useState, useRef, useEffect } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\n\nexport default function NotFound() {\n    let navigate = useNavigate();\n    const timeRef = useRef(-1 );\n    // console.log(\"开始执行\");\n    const [time, setTime] = useState(5);\n\n    useEffect(() => {\n        let timer = setInterval(() => {\n            setTime(time => {\n                if (time === 1) {\n                    navigate('/home', { replace: true })\n                }\n                return time - 1\n            })\n        }, 1000)\n        return () => {\n            clearInterval(timer);\n        }\n\n    }, [time])\n\n\n\n    return (\n        <div>\n            <h1>访问的页面不存在!!!</h1>\n            <p>{time}秒后返回<Link to='/home'>主页</Link>....</p>\n        </div>\n    )\n}\n","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Profile/Feedback/index.jsx",["245","246"],[],"import NavBar from '@/components/NavBar'\nimport { ImageUploader, Space, InputItem } from 'antd-mobile'\nimport { useNavigate } from 'react-router-dom'\nimport styles from './index.module.scss'\n\nconst ProfileFeedback = () => {\n  const navigate = useNavigate()\n\n  return (\n    <div className={styles.root}>\n      <NavBar onLeftClick={() => navigate(-1)}>意见反馈</NavBar>\n\n      <div className=\"wrapper\">\n        <div className=\"feedback-item\">\n          <p className=\"title\">简介</p>\n          <br />\n          <div className=\"textarea-wrap\">\n            <textarea className=\"textarea\" placeholder=\"请输入\"></textarea>\n            <div className=\"count\">0/100</div>\n          </div>\n          {/* <ImagePicker files={[]} multiple /> */}\n          <br />\n          <ImageUploader\n            value={[]}\n            // onChange={setFileList}\n            // upload={mockUpload}\n          />\n          <p className=\"image-picker-desc\">最多6张，单个图片不超过20M。</p>\n        </div>\n        <br />\n        <div className=\"feedback-item\">\n          <p className=\"title\">联系方式</p>\n          <input type=\"text\" placeholder=\"请输入手机号码便于联系（非必填）\" />\n          {/* <InputItem placeholder=\"请输入手机号码便于联系（非必填）\" /> */}\n        </div>\n\n        <div className=\"feedback-item feedback-submit\">\n          <button>提交反馈</button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default ProfileFeedback\n","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Tabs/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/reducers/home.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/store/actions/home.js",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/Channels/index.jsx",["247"],[],"import Icon from '@/components/Icon';\nimport styles from './index.module.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport differenceBy from 'lodash/differenceBy';\nimport classNames from 'classnames';\nimport { useState } from 'react';\nimport { addChannel, delChannel } from '@/store/actions/home';\nimport { Toast } from 'antd-mobile';\n\n\n/**\n * 频道管理组件\n * @param {Number} props.tabActiveIndex 用户选中的频道的索引\n * @param {Function} props.onClose 关闭频道管理抽屉时的回调函数\n * @param {Function} props.onChannelClick 当点击频道列表中的某个频道时的会带哦函数\n */\nconst Channels = ({ index, onClose, onChange }) => {\n    const dispatch = useDispatch();\n    const onAddChannel = channel => {\n        // 调用 Action 来添加频道\n        dispatch(addChannel(channel));\n    }\n    const onDeleteChannel = (channel,i) => {\n        // 调用 Action 来删除频道\n        if (userChannels.length <= 4) {\n            Toast.show({ content: \"至少保留四个频道!\" });\n            return;\n        }\n        // 修改高亮\n        // 如果删除的i和index相等，默认让推荐0高亮\n        // 如果删除的i小于index，默认让i-1高亮\n        // 如果删除的i大于index，不用处理，默认i高亮\n        dispatch(delChannel(channel));\n        if (i === index) {\n            onChange(0);\n        } else if (i < index) {\n            onChange(index - 1);\n\n        } \n    }\n    // 控制普通/编辑模式的状态\n    const [editable, setEditable] = useState(false);\n    const userChannels = useSelector((state) => state.home.userChannels);\n    const optionChannels = useSelector((state) => {\n        // 推荐频道 = 所有频道 - 我的频道\n        const { userChannels, allChannels } = state.home;\n        return differenceBy(allChannels, userChannels, 'id')\n    })\n    const changeChannel = (i) => {\n\n    }\n\n    return (\n        <div className={styles.root}>\n            {/* 顶部栏：带关闭按钮 */}\n            <div className=\"channel-header\">\n                <Icon type=\"icon-close\" onClick={onClose} />\n            </div>\n\n            {/* 频道列表 */}\n            <div className=\"channel-content\">\n                {/* 当前已选择的频道列表 */}\n                <div className={classNames('channel-item', editable ? 'edit' : '')}>\n                    <div className=\"channel-item-header\">\n                        <span className=\"channel-item-title\">我的频道</span>\n                        <span className=\"channel-item-title-extra\">\n                            {editable ? '点击删除频道' : '点击进入频道'}\n                        </span>\n                        <span className=\"channel-item-edit\" onClick={() => setEditable(!editable)}>\n                            {editable ? '保存' : '编辑'}\n                        </span>\n                    </div>\n\n\n                    {/* 我的频道 */}\n                    <div className=\"channel-list\">\n                        {userChannels.map((item, i) => (\n                            <span\n                                className={classNames('channel-list-item', {\n                                    selected: index === i,\n                                })}\n                                key={item.id}\n                                onClick={() => {\n                                    // 如果是编辑状态，不允许跳转\n                                    if (editable) return\n                                    onChange(i);\n                                    // 关闭弹层\n                                    onClose()\n                                }}\n                            >\n                                {item.name}\n                                {\n                                    item.id !== 0 && <Icon type=\"icon-close\" onClick={() => onDeleteChannel(item,i)} />\n                                }\n                            </span>\n                        ))}\n                    </div>\n                </div>\n\n                {/* 推荐的频道列表 */}\n                <div className=\"channel-item\">\n                    <div className=\"channel-item-header\">\n                        <span className=\"channel-item-title\">频道推荐</span>\n                        <span className=\"channel-item-title-extra\">点击添加频道</span>\n                    </div>\n                    <div className=\"channel-list\">\n                        {optionChannels.map((item) => (\n                            <span\n                                className=\"channel-list-item\"\n                                key={item.id}\n                            // 添加频道\n                            onClick={() => onAddChannel(item)}\n                            >\n                                + {item.name}\n                            </span>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div >\n    )\n}\n\nexport default Channels","/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/ArticleList/index.jsx",["248"],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Video/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/components/Image/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/FeedbackActionMenu/index.jsx",[],[],"/Users/tonystark/code/VSCodeProject/react/gk-h5/src/pages/Home/components/ArticleItem/index.jsx",["249"],[],{"ruleId":"250","severity":1,"message":"251","line":2,"column":27,"nodeType":"252","messageId":"253","endLine":2,"endColumn":36},{"ruleId":"250","severity":1,"message":"254","line":5,"column":10,"nodeType":"252","messageId":"253","endLine":5,"endColumn":18},{"ruleId":"250","severity":1,"message":"255","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":16},{"ruleId":"250","severity":1,"message":"256","line":13,"column":10,"nodeType":"252","messageId":"253","endLine":13,"endColumn":22},{"ruleId":"250","severity":1,"message":"257","line":88,"column":5,"nodeType":"252","messageId":"253","endLine":88,"endColumn":12},{"ruleId":"258","severity":1,"message":"259","line":115,"column":27,"nodeType":"260","messageId":"261","endLine":115,"endColumn":29},{"ruleId":"250","severity":1,"message":"262","line":8,"column":15,"nodeType":"252","messageId":"253","endLine":8,"endColumn":18},{"ruleId":"263","severity":2,"message":"264","line":24,"column":9,"nodeType":"265","messageId":"266","endLine":25,"endColumn":60},{"ruleId":"267","severity":1,"message":"268","line":24,"column":52,"nodeType":"269","messageId":"270","endLine":24,"endColumn":53},{"ruleId":"250","severity":1,"message":"271","line":52,"column":13,"nodeType":"252","messageId":"253","endLine":52,"endColumn":18},{"ruleId":"272","severity":1,"message":"273","line":102,"column":5,"nodeType":"274","messageId":"275","endLine":102,"endColumn":32},{"ruleId":"276","severity":1,"message":"277","line":30,"column":6,"nodeType":"278","endLine":30,"endColumn":8,"suggestions":"279"},{"ruleId":"276","severity":1,"message":"277","line":34,"column":6,"nodeType":"278","endLine":34,"endColumn":8,"suggestions":"280"},{"ruleId":"250","severity":1,"message":"256","line":13,"column":10,"nodeType":"252","messageId":"253","endLine":13,"endColumn":22},{"ruleId":"250","severity":1,"message":"257","line":89,"column":5,"nodeType":"252","messageId":"253","endLine":89,"endColumn":12},{"ruleId":"258","severity":1,"message":"259","line":116,"column":27,"nodeType":"260","messageId":"261","endLine":116,"endColumn":29},{"ruleId":"276","severity":1,"message":"277","line":15,"column":5,"nodeType":"278","endLine":15,"endColumn":7,"suggestions":"281"},{"ruleId":"250","severity":1,"message":"282","line":2,"column":10,"nodeType":"252","messageId":"253","endLine":2,"endColumn":25},{"ruleId":"250","severity":1,"message":"283","line":4,"column":10,"nodeType":"252","messageId":"253","endLine":4,"endColumn":16},{"ruleId":"250","severity":1,"message":"284","line":8,"column":22,"nodeType":"252","messageId":"253","endLine":8,"endColumn":35},{"ruleId":"250","severity":1,"message":"285","line":10,"column":8,"nodeType":"252","messageId":"253","endLine":10,"endColumn":17},{"ruleId":"250","severity":1,"message":"286","line":11,"column":8,"nodeType":"252","messageId":"253","endLine":11,"endColumn":16},{"ruleId":"250","severity":1,"message":"287","line":12,"column":8,"nodeType":"252","messageId":"253","endLine":12,"endColumn":13},{"ruleId":"250","severity":1,"message":"288","line":20,"column":9,"nodeType":"252","messageId":"253","endLine":20,"endColumn":16},{"ruleId":"250","severity":1,"message":"289","line":23,"column":10,"nodeType":"252","messageId":"253","endLine":23,"endColumn":14},{"ruleId":"250","severity":1,"message":"290","line":29,"column":10,"nodeType":"252","messageId":"253","endLine":29,"endColumn":18},{"ruleId":"250","severity":1,"message":"291","line":29,"column":20,"nodeType":"252","messageId":"253","endLine":29,"endColumn":31},{"ruleId":"250","severity":1,"message":"292","line":34,"column":9,"nodeType":"252","messageId":"253","endLine":34,"endColumn":16},{"ruleId":"250","severity":1,"message":"293","line":9,"column":10,"nodeType":"252","messageId":"253","endLine":9,"endColumn":15},{"ruleId":"294","severity":1,"message":"295","line":97,"column":29,"nodeType":"296","messageId":"297","endLine":97,"endColumn":44},{"ruleId":"294","severity":1,"message":"295","line":104,"column":29,"nodeType":"296","messageId":"297","endLine":104,"endColumn":43},{"ruleId":"250","severity":1,"message":"298","line":7,"column":11,"nodeType":"252","messageId":"253","endLine":7,"endColumn":18},{"ruleId":"276","severity":1,"message":"299","line":24,"column":8,"nodeType":"278","endLine":24,"endColumn":14,"suggestions":"300"},{"ruleId":"250","severity":1,"message":"301","line":2,"column":25,"nodeType":"252","messageId":"253","endLine":2,"endColumn":30},{"ruleId":"250","severity":1,"message":"302","line":2,"column":32,"nodeType":"252","messageId":"253","endLine":2,"endColumn":41},{"ruleId":"250","severity":1,"message":"303","line":49,"column":11,"nodeType":"252","messageId":"253","endLine":49,"endColumn":24},{"ruleId":"276","severity":1,"message":"304","line":48,"column":8,"nodeType":"278","endLine":48,"endColumn":34,"suggestions":"305"},{"ruleId":"250","severity":1,"message":"306","line":22,"column":5,"nodeType":"252","messageId":"253","endLine":22,"endColumn":13},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'hasToken' is defined but never used.","'requests' is defined but never used.","'getTokenInfo' is defined but never used.","'touched' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'res' is assigned a value but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'token' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["307"],["308"],["309"],"'removeTokenInfo' is defined but never used.","'Drawer' is defined but never used.","'updateProfile' is defined but never used.","'EditInput' is defined but never used.","'EditList' is defined but never used.","'dayjs' is defined but never used.","'fileRef' is assigned a value but never used.","'open' is assigned a value but never used.","'listOpen' is assigned a value but never used.","'setListOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'Toast' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'timeRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["310"],"'Space' is defined but never used.","'InputItem' is defined but never used.","'changeChannel' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'res'. Either include it or remove the dependency array.",["311"],"'aut_name' is assigned a value but never used.",{"desc":"312","fix":"313"},{"desc":"312","fix":"314"},{"desc":"312","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},"Update the dependencies array to be: [dispatch]",{"range":"320","text":"321"},{"range":"322","text":"321"},{"range":"323","text":"321"},"Update the dependencies array to be: [navigate, time]",{"range":"324","text":"325"},"Update the dependencies array to be: [channelId, aid, dispatch, res]",{"range":"326","text":"327"},[938,940],"[dispatch]",[1022,1024],[521,523],[647,653],"[navigate, time]",[1536,1562],"[channelId, aid, dispatch, res]"]